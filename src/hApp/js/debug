ContextualizedService { context: 'context1', tags: 'tag1' }
Response {
  _events: [Object: null prototype] {},
  _eventsCount: 0,
  _maxListeners: undefined,
  res:
   IncomingMessage {
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: true,
        endEmitted: true,
        reading: false,
        sync: true,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        paused: false,
        emitClose: true,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: true,
        decoder: [StringDecoder],
        encoding: 'utf8' },
     readable: false,
     _events:
      [Object: null prototype] {
        end: [Array],
        data: [Array],
        error: [Array],
        close: [Function: bound emit] },
     _eventsCount: 4,
     _maxListeners: undefined,
     socket:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(asyncId)]: 5,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     connection:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(asyncId)]: 5,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     httpVersionMajor: 1,
     httpVersionMinor: 1,
     httpVersion: '1.1',
     complete: true,
     headers:
      { 'content-type': 'application/json; charset=utf-8',
        connection: 'close',
        'content-length': '98',
        date: 'Tue, 25 Jun 2019 15:36:38 GMT' },
     rawHeaders:
      [ 'content-type',
        'application/json; charset=utf-8',
        'connection',
        'close',
        'content-length',
        '98',
        'date',
        'Tue, 25 Jun 2019 15:36:38 GMT' ],
     trailers: {},
     rawTrailers: [],
     aborted: false,
     upgrade: false,
     url: '',
     method: null,
     statusCode: 200,
     statusMessage: 'OK',
     client:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(asyncId)]: 5,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     _consuming: false,
     _dumped: false,
     req:
      ClientRequest {
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: 183,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [Socket],
        connection: [Socket],
        _header:
         'POST / HTTP/1.1\r\nHost: localhost:8888\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/5.0.6\r\nContent-Type: application/json\r\naccept: json\r\nContent-Length: 183\r\nConnection: close\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput],
        agent: [Agent],
        socketPath: undefined,
        timeout: undefined,
        method: 'POST',
        path: '/',
        _ended: true,
        res: [Circular],
        aborted: undefined,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     text:
      '{"jsonrpc":"2.0","result":"{\\"Ok\\":\\"QmdQyv4kQ74dUeyLKpLP96DZMzEH7VaCqC5oNyFyfqmsCY\\"}","id":"0"}\n' },
  request:
   Request {
     _events: [Object: null prototype] { abort: [Function] },
     _eventsCount: 1,
     _maxListeners: undefined,
     _enableHttp2: false,
     _agent: false,
     _formData: null,
     method: 'POST',
     url: 'http://localhost:8888',
     _header:
      { 'user-agent': 'node-superagent/5.0.6',
        'content-type': 'application/json',
        accept: 'json' },
     header:
      { 'User-Agent': 'node-superagent/5.0.6',
        'Content-Type': 'application/json',
        accept: 'json' },
     writable: true,
     _redirects: 0,
     _maxRedirects: 5,
     cookies: '',
     qs: {},
     _query: [],
     qsRaw: [],
     _redirectList: [],
     _streamRequest: false,
     _data:
      { jsonrpc: '2.0', id: '0', method: 'call', params: [Object] },
     req:
      ClientRequest {
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: 183,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [Socket],
        connection: [Socket],
        _header:
         'POST / HTTP/1.1\r\nHost: localhost:8888\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/5.0.6\r\nContent-Type: application/json\r\naccept: json\r\nContent-Length: 183\r\nConnection: close\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput],
        agent: [Agent],
        socketPath: undefined,
        timeout: undefined,
        method: 'POST',
        path: '/',
        _ended: true,
        res: [IncomingMessage],
        aborted: undefined,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     protocol: 'http:',
     host: 'localhost:8888',
     _endCalled: true,
     _callback: [Function],
     _fullfilledPromise: Promise { [Circular] },
     res:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 200,
        statusMessage: 'OK',
        client: [Socket],
        _consuming: false,
        _dumped: false,
        req: [ClientRequest],
        text:
         '{"jsonrpc":"2.0","result":"{\\"Ok\\":\\"QmdQyv4kQ74dUeyLKpLP96DZMzEH7VaCqC5oNyFyfqmsCY\\"}","id":"0"}\n' },
     _resBuffered: true,
     response: [Circular],
     called: true },
  req:
   ClientRequest {
     _events:
      [Object: null prototype] {
        drain: [Function],
        error: [Function],
        prefinish: [Function: requestOnPrefinish] },
     _eventsCount: 3,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: true,
     sendDate: false,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: 183,
     _hasBody: true,
     _trailer: '',
     finished: true,
     _headerSent: true,
     socket:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 5,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     connection:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 5,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     _header:
      'POST / HTTP/1.1\r\nHost: localhost:8888\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/5.0.6\r\nContent-Type: application/json\r\naccept: json\r\nContent-Length: 183\r\nConnection: close\r\n\r\n',
     _onPendingData: [Function: noopPendingOutput],
     agent:
      Agent {
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        defaultPort: 80,
        protocol: 'http:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256 },
     socketPath: undefined,
     timeout: undefined,
     method: 'POST',
     path: '/',
     _ended: true,
     res:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 200,
        statusMessage: 'OK',
        client: [Socket],
        _consuming: false,
        _dumped: false,
        req: [Circular],
        text:
         '{"jsonrpc":"2.0","result":"{\\"Ok\\":\\"QmdQyv4kQ74dUeyLKpLP96DZMzEH7VaCqC5oNyFyfqmsCY\\"}","id":"0"}\n' },
     aborted: undefined,
     timeoutCb: null,
     upgradeOrConnect: false,
     parser: null,
     maxHeadersCount: null,
     [Symbol(isCorked)]: false,
     [Symbol(outHeadersKey)]:
      [Object: null prototype] {
        host: [Array],
        'accept-encoding': [Array],
        'user-agent': [Array],
        'content-type': [Array],
        accept: [Array],
        'content-length': [Array] } },
  text:
   '{"jsonrpc":"2.0","result":"{\\"Ok\\":\\"QmdQyv4kQ74dUeyLKpLP96DZMzEH7VaCqC5oNyFyfqmsCY\\"}","id":"0"}\n',
  body:
   { jsonrpc: '2.0',
     result: '{"Ok":"QmdQyv4kQ74dUeyLKpLP96DZMzEH7VaCqC5oNyFyfqmsCY"}',
     id: '0' },
  files: undefined,
  buffered: true,
  headers:
   { 'content-type': 'application/json; charset=utf-8',
     connection: 'close',
     'content-length': '98',
     date: 'Tue, 25 Jun 2019 15:36:38 GMT' },
  header:
   { 'content-type': 'application/json; charset=utf-8',
     connection: 'close',
     'content-length': '98',
     date: 'Tue, 25 Jun 2019 15:36:38 GMT' },
  statusCode: 200,
  status: 200,
  statusType: 2,
  info: false,
  ok: true,
  redirect: false,
  clientError: false,
  serverError: false,
  error: false,
  created: false,
  accepted: false,
  noContent: false,
  badRequest: false,
  unauthorized: false,
  notAcceptable: false,
  forbidden: false,
  notFound: false,
  unprocessableEntity: false,
  type: 'application/json',
  charset: 'utf-8',
  links: {},
  setEncoding: [Function: bound ],
  redirects: [],
  pipe: [Function] }
Response {
  _events: [Object: null prototype] {},
  _eventsCount: 0,
  _maxListeners: undefined,
  res:
   IncomingMessage {
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: true,
        endEmitted: true,
        reading: false,
        sync: true,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        paused: false,
        emitClose: true,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: true,
        decoder: [StringDecoder],
        encoding: 'utf8' },
     readable: false,
     _events:
      [Object: null prototype] {
        end: [Array],
        data: [Array],
        error: [Array],
        close: [Function: bound emit] },
     _eventsCount: 4,
     _maxListeners: undefined,
     socket:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(asyncId)]: 12,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     connection:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(asyncId)]: 12,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     httpVersionMajor: 1,
     httpVersionMinor: 1,
     httpVersion: '1.1',
     complete: true,
     headers:
      { 'content-type': 'application/json; charset=utf-8',
        connection: 'close',
        'content-length': '114',
        date: 'Tue, 25 Jun 2019 15:36:38 GMT' },
     rawHeaders:
      [ 'content-type',
        'application/json; charset=utf-8',
        'connection',
        'close',
        'content-length',
        '114',
        'date',
        'Tue, 25 Jun 2019 15:36:38 GMT' ],
     trailers: {},
     rawTrailers: [],
     aborted: false,
     upgrade: false,
     url: '',
     method: null,
     statusCode: 200,
     statusMessage: 'OK',
     client:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(asyncId)]: 12,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     _consuming: false,
     _dumped: false,
     req:
      ClientRequest {
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: 276,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [Socket],
        connection: [Socket],
        _header:
         'POST / HTTP/1.1\r\nHost: localhost:8888\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/5.0.6\r\nContent-Type: application/json\r\naccept: json\r\nContent-Length: 276\r\nConnection: close\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput],
        agent: [Agent],
        socketPath: undefined,
        timeout: undefined,
        method: 'POST',
        path: '/',
        _ended: true,
        res: [Circular],
        aborted: undefined,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     text:
      '{"jsonrpc":"2.0","result":"{\\"SerializationError\\":\\"missing field `base_addr` at line 1 column 142\\"}","id":"0"}\n' },
  request:
   Request {
     _events: [Object: null prototype] { abort: [Function] },
     _eventsCount: 1,
     _maxListeners: undefined,
     _enableHttp2: false,
     _agent: false,
     _formData: null,
     method: 'POST',
     url: 'http://localhost:8888',
     _header:
      { 'user-agent': 'node-superagent/5.0.6',
        'content-type': 'application/json',
        accept: 'json' },
     header:
      { 'User-Agent': 'node-superagent/5.0.6',
        'Content-Type': 'application/json',
        accept: 'json' },
     writable: true,
     _redirects: 0,
     _maxRedirects: 5,
     cookies: '',
     qs: {},
     _query: [],
     qsRaw: [],
     _redirectList: [],
     _streamRequest: false,
     _data:
      { jsonrpc: '2.0', id: '0', method: 'call', params: [Object] },
     req:
      ClientRequest {
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: 276,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [Socket],
        connection: [Socket],
        _header:
         'POST / HTTP/1.1\r\nHost: localhost:8888\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/5.0.6\r\nContent-Type: application/json\r\naccept: json\r\nContent-Length: 276\r\nConnection: close\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput],
        agent: [Agent],
        socketPath: undefined,
        timeout: undefined,
        method: 'POST',
        path: '/',
        _ended: true,
        res: [IncomingMessage],
        aborted: undefined,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     protocol: 'http:',
     host: 'localhost:8888',
     _endCalled: true,
     _callback: [Function],
     _fullfilledPromise: Promise { [Circular] },
     res:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 200,
        statusMessage: 'OK',
        client: [Socket],
        _consuming: false,
        _dumped: false,
        req: [ClientRequest],
        text:
         '{"jsonrpc":"2.0","result":"{\\"SerializationError\\":\\"missing field `base_addr` at line 1 column 142\\"}","id":"0"}\n' },
     _resBuffered: true,
     response: [Circular],
     called: true },
  req:
   ClientRequest {
     _events:
      [Object: null prototype] {
        drain: [Function],
        error: [Function],
        prefinish: [Function: requestOnPrefinish] },
     _eventsCount: 3,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: true,
     sendDate: false,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: 276,
     _hasBody: true,
     _trailer: '',
     finished: true,
     _headerSent: true,
     socket:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 12,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     connection:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 12,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     _header:
      'POST / HTTP/1.1\r\nHost: localhost:8888\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/5.0.6\r\nContent-Type: application/json\r\naccept: json\r\nContent-Length: 276\r\nConnection: close\r\n\r\n',
     _onPendingData: [Function: noopPendingOutput],
     agent:
      Agent {
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        defaultPort: 80,
        protocol: 'http:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256 },
     socketPath: undefined,
     timeout: undefined,
     method: 'POST',
     path: '/',
     _ended: true,
     res:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 200,
        statusMessage: 'OK',
        client: [Socket],
        _consuming: false,
        _dumped: false,
        req: [Circular],
        text:
         '{"jsonrpc":"2.0","result":"{\\"SerializationError\\":\\"missing field `base_addr` at line 1 column 142\\"}","id":"0"}\n' },
     aborted: undefined,
     timeoutCb: null,
     upgradeOrConnect: false,
     parser: null,
     maxHeadersCount: null,
     [Symbol(isCorked)]: false,
     [Symbol(outHeadersKey)]:
      [Object: null prototype] {
        host: [Array],
        'accept-encoding': [Array],
        'user-agent': [Array],
        'content-type': [Array],
        accept: [Array],
        'content-length': [Array] } },
  text:
   '{"jsonrpc":"2.0","result":"{\\"SerializationError\\":\\"missing field `base_addr` at line 1 column 142\\"}","id":"0"}\n',
  body:
   { jsonrpc: '2.0',
     result:
      '{"SerializationError":"missing field `base_addr` at line 1 column 142"}',
     id: '0' },
  files: undefined,
  buffered: true,
  headers:
   { 'content-type': 'application/json; charset=utf-8',
     connection: 'close',
     'content-length': '114',
     date: 'Tue, 25 Jun 2019 15:36:38 GMT' },
  header:
   { 'content-type': 'application/json; charset=utf-8',
     connection: 'close',
     'content-length': '114',
     date: 'Tue, 25 Jun 2019 15:36:38 GMT' },
  statusCode: 200,
  status: 200,
  statusType: 2,
  info: false,
  ok: true,
  redirect: false,
  clientError: false,
  serverError: false,
  error: false,
  created: false,
  accepted: false,
  noContent: false,
  badRequest: false,
  unauthorized: false,
  notAcceptable: false,
  forbidden: false,
  notFound: false,
  unprocessableEntity: false,
  type: 'application/json',
  charset: 'utf-8',
  links: {},
  setEncoding: [Function: bound ],
  redirects: [],
  pipe: [Function] }
ContextualizedService { context: 'context1',
  tags: 'tag1',
  entityType: 'ContextualizedService' }
service undefined
Response {
  _events: [Object: null prototype] {},
  _eventsCount: 0,
  _maxListeners: undefined,
  res:
   IncomingMessage {
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: true,
        endEmitted: true,
        reading: false,
        sync: true,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        paused: false,
        emitClose: true,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: true,
        decoder: [StringDecoder],
        encoding: 'utf8' },
     readable: false,
     _events:
      [Object: null prototype] {
        end: [Array],
        data: [Array],
        error: [Array],
        close: [Function: bound emit] },
     _eventsCount: 4,
     _maxListeners: undefined,
     socket:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(asyncId)]: 9,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     connection:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(asyncId)]: 9,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     httpVersionMajor: 1,
     httpVersionMinor: 1,
     httpVersion: '1.1',
     complete: true,
     headers:
      { 'content-type': 'application/json; charset=utf-8',
        connection: 'close',
        'content-length': '98',
        date: 'Tue, 25 Jun 2019 15:36:38 GMT' },
     rawHeaders:
      [ 'content-type',
        'application/json; charset=utf-8',
        'connection',
        'close',
        'content-length',
        '98',
        'date',
        'Tue, 25 Jun 2019 15:36:38 GMT' ],
     trailers: {},
     rawTrailers: [],
     aborted: false,
     upgrade: false,
     url: '',
     method: null,
     statusCode: 200,
     statusMessage: 'OK',
     client:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(asyncId)]: 9,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     _consuming: false,
     _dumped: false,
     req:
      ClientRequest {
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: 190,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [Socket],
        connection: [Socket],
        _header:
         'POST / HTTP/1.1\r\nHost: localhost:8888\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/5.0.6\r\nContent-Type: application/json\r\naccept: json\r\nContent-Length: 190\r\nConnection: close\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput],
        agent: [Agent],
        socketPath: undefined,
        timeout: undefined,
        method: 'POST',
        path: '/',
        _ended: true,
        res: [Circular],
        aborted: undefined,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     text:
      '{"jsonrpc":"2.0","result":"{\\"Ok\\":\\"QmPBA3A8fiJxocHsXwJCRQgqBSKUgfLMYTQfnvNMzfRKvR\\"}","id":"0"}\n' },
  request:
   Request {
     _events: [Object: null prototype] { abort: [Function] },
     _eventsCount: 1,
     _maxListeners: undefined,
     _enableHttp2: false,
     _agent: false,
     _formData: null,
     method: 'POST',
     url: 'http://localhost:8888',
     _header:
      { 'user-agent': 'node-superagent/5.0.6',
        'content-type': 'application/json',
        accept: 'json' },
     header:
      { 'User-Agent': 'node-superagent/5.0.6',
        'Content-Type': 'application/json',
        accept: 'json' },
     writable: true,
     _redirects: 0,
     _maxRedirects: 5,
     cookies: '',
     qs: {},
     _query: [],
     qsRaw: [],
     _redirectList: [],
     _streamRequest: false,
     _data:
      { jsonrpc: '2.0', id: '0', method: 'call', params: [Object] },
     req:
      ClientRequest {
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: 190,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [Socket],
        connection: [Socket],
        _header:
         'POST / HTTP/1.1\r\nHost: localhost:8888\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/5.0.6\r\nContent-Type: application/json\r\naccept: json\r\nContent-Length: 190\r\nConnection: close\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput],
        agent: [Agent],
        socketPath: undefined,
        timeout: undefined,
        method: 'POST',
        path: '/',
        _ended: true,
        res: [IncomingMessage],
        aborted: undefined,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     protocol: 'http:',
     host: 'localhost:8888',
     _endCalled: true,
     _callback: [Function],
     _fullfilledPromise: Promise { [Circular] },
     res:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 200,
        statusMessage: 'OK',
        client: [Socket],
        _consuming: false,
        _dumped: false,
        req: [ClientRequest],
        text:
         '{"jsonrpc":"2.0","result":"{\\"Ok\\":\\"QmPBA3A8fiJxocHsXwJCRQgqBSKUgfLMYTQfnvNMzfRKvR\\"}","id":"0"}\n' },
     _resBuffered: true,
     response: [Circular],
     called: true },
  req:
   ClientRequest {
     _events:
      [Object: null prototype] {
        drain: [Function],
        error: [Function],
        prefinish: [Function: requestOnPrefinish] },
     _eventsCount: 3,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: true,
     sendDate: false,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: 190,
     _hasBody: true,
     _trailer: '',
     finished: true,
     _headerSent: true,
     socket:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 9,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     connection:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 9,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     _header:
      'POST / HTTP/1.1\r\nHost: localhost:8888\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/5.0.6\r\nContent-Type: application/json\r\naccept: json\r\nContent-Length: 190\r\nConnection: close\r\n\r\n',
     _onPendingData: [Function: noopPendingOutput],
     agent:
      Agent {
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        defaultPort: 80,
        protocol: 'http:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256 },
     socketPath: undefined,
     timeout: undefined,
     method: 'POST',
     path: '/',
     _ended: true,
     res:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 200,
        statusMessage: 'OK',
        client: [Socket],
        _consuming: false,
        _dumped: false,
        req: [Circular],
        text:
         '{"jsonrpc":"2.0","result":"{\\"Ok\\":\\"QmPBA3A8fiJxocHsXwJCRQgqBSKUgfLMYTQfnvNMzfRKvR\\"}","id":"0"}\n' },
     aborted: undefined,
     timeoutCb: null,
     upgradeOrConnect: false,
     parser: null,
     maxHeadersCount: null,
     [Symbol(isCorked)]: false,
     [Symbol(outHeadersKey)]:
      [Object: null prototype] {
        host: [Array],
        'accept-encoding': [Array],
        'user-agent': [Array],
        'content-type': [Array],
        accept: [Array],
        'content-length': [Array] } },
  text:
   '{"jsonrpc":"2.0","result":"{\\"Ok\\":\\"QmPBA3A8fiJxocHsXwJCRQgqBSKUgfLMYTQfnvNMzfRKvR\\"}","id":"0"}\n',
  body:
   { jsonrpc: '2.0',
     result: '{"Ok":"QmPBA3A8fiJxocHsXwJCRQgqBSKUgfLMYTQfnvNMzfRKvR"}',
     id: '0' },
  files: undefined,
  buffered: true,
  headers:
   { 'content-type': 'application/json; charset=utf-8',
     connection: 'close',
     'content-length': '98',
     date: 'Tue, 25 Jun 2019 15:36:38 GMT' },
  header:
   { 'content-type': 'application/json; charset=utf-8',
     connection: 'close',
     'content-length': '98',
     date: 'Tue, 25 Jun 2019 15:36:38 GMT' },
  statusCode: 200,
  status: 200,
  statusType: 2,
  info: false,
  ok: true,
  redirect: false,
  clientError: false,
  serverError: false,
  error: false,
  created: false,
  accepted: false,
  noContent: false,
  badRequest: false,
  unauthorized: false,
  notAcceptable: false,
  forbidden: false,
  notFound: false,
  unprocessableEntity: false,
  type: 'application/json',
  charset: 'utf-8',
  links: {},
  setEncoding: [Function: bound ],
  redirects: [],
  pipe: [Function] }
Response {
  _events: [Object: null prototype] {},
  _eventsCount: 0,
  _maxListeners: undefined,
  res:
   IncomingMessage {
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: true,
        endEmitted: true,
        reading: false,
        sync: true,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        paused: false,
        emitClose: true,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: true,
        decoder: [StringDecoder],
        encoding: 'utf8' },
     readable: false,
     _events:
      [Object: null prototype] {
        end: [Array],
        data: [Array],
        error: [Array],
        close: [Function: bound emit] },
     _eventsCount: 4,
     _maxListeners: undefined,
     socket:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(asyncId)]: 49,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     connection:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(asyncId)]: 49,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     httpVersionMajor: 1,
     httpVersionMinor: 1,
     httpVersion: '1.1',
     complete: true,
     headers:
      { 'content-type': 'application/json; charset=utf-8',
        connection: 'close',
        'content-length': '98',
        date: 'Tue, 25 Jun 2019 15:36:38 GMT' },
     rawHeaders:
      [ 'content-type',
        'application/json; charset=utf-8',
        'connection',
        'close',
        'content-length',
        '98',
        'date',
        'Tue, 25 Jun 2019 15:36:38 GMT' ],
     trailers: {},
     rawTrailers: [],
     aborted: false,
     upgrade: false,
     url: '',
     method: null,
     statusCode: 200,
     statusMessage: 'OK',
     client:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(asyncId)]: 49,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     _consuming: false,
     _dumped: false,
     req:
      ClientRequest {
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: 318,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [Socket],
        connection: [Socket],
        _header:
         'POST / HTTP/1.1\r\nHost: localhost:8888\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/5.0.6\r\nContent-Type: application/json\r\naccept: json\r\nContent-Length: 318\r\nConnection: close\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput],
        agent: [Agent],
        socketPath: undefined,
        timeout: undefined,
        method: 'POST',
        path: '/',
        _ended: true,
        res: [Circular],
        aborted: undefined,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     text:
      '{"jsonrpc":"2.0","result":"{\\"Ok\\":\\"QmT4qWA4uRzjkM2mX43So42TUv8nCMcptYeZtMRVXn9spw\\"}","id":"0"}\n' },
  request:
   Request {
     _events: [Object: null prototype] { abort: [Function] },
     _eventsCount: 1,
     _maxListeners: undefined,
     _enableHttp2: false,
     _agent: false,
     _formData: null,
     method: 'POST',
     url: 'http://localhost:8888',
     _header:
      { 'user-agent': 'node-superagent/5.0.6',
        'content-type': 'application/json',
        accept: 'json' },
     header:
      { 'User-Agent': 'node-superagent/5.0.6',
        'Content-Type': 'application/json',
        accept: 'json' },
     writable: true,
     _redirects: 0,
     _maxRedirects: 5,
     cookies: '',
     qs: {},
     _query: [],
     qsRaw: [],
     _redirectList: [],
     _streamRequest: false,
     _data:
      { jsonrpc: '2.0', id: '0', method: 'call', params: [Object] },
     req:
      ClientRequest {
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: 318,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [Socket],
        connection: [Socket],
        _header:
         'POST / HTTP/1.1\r\nHost: localhost:8888\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/5.0.6\r\nContent-Type: application/json\r\naccept: json\r\nContent-Length: 318\r\nConnection: close\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput],
        agent: [Agent],
        socketPath: undefined,
        timeout: undefined,
        method: 'POST',
        path: '/',
        _ended: true,
        res: [IncomingMessage],
        aborted: undefined,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     protocol: 'http:',
     host: 'localhost:8888',
     _endCalled: true,
     _callback: [Function],
     _fullfilledPromise: Promise { [Circular] },
     res:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 200,
        statusMessage: 'OK',
        client: [Socket],
        _consuming: false,
        _dumped: false,
        req: [ClientRequest],
        text:
         '{"jsonrpc":"2.0","result":"{\\"Ok\\":\\"QmT4qWA4uRzjkM2mX43So42TUv8nCMcptYeZtMRVXn9spw\\"}","id":"0"}\n' },
     _resBuffered: true,
     response: [Circular],
     called: true },
  req:
   ClientRequest {
     _events:
      [Object: null prototype] {
        drain: [Function],
        error: [Function],
        prefinish: [Function: requestOnPrefinish] },
     _eventsCount: 3,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: true,
     sendDate: false,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: 318,
     _hasBody: true,
     _trailer: '',
     finished: true,
     _headerSent: true,
     socket:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 49,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     connection:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 49,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     _header:
      'POST / HTTP/1.1\r\nHost: localhost:8888\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/5.0.6\r\nContent-Type: application/json\r\naccept: json\r\nContent-Length: 318\r\nConnection: close\r\n\r\n',
     _onPendingData: [Function: noopPendingOutput],
     agent:
      Agent {
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        defaultPort: 80,
        protocol: 'http:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256 },
     socketPath: undefined,
     timeout: undefined,
     method: 'POST',
     path: '/',
     _ended: true,
     res:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 200,
        statusMessage: 'OK',
        client: [Socket],
        _consuming: false,
        _dumped: false,
        req: [Circular],
        text:
         '{"jsonrpc":"2.0","result":"{\\"Ok\\":\\"QmT4qWA4uRzjkM2mX43So42TUv8nCMcptYeZtMRVXn9spw\\"}","id":"0"}\n' },
     aborted: undefined,
     timeoutCb: null,
     upgradeOrConnect: false,
     parser: null,
     maxHeadersCount: null,
     [Symbol(isCorked)]: false,
     [Symbol(outHeadersKey)]:
      [Object: null prototype] {
        host: [Array],
        'accept-encoding': [Array],
        'user-agent': [Array],
        'content-type': [Array],
        accept: [Array],
        'content-length': [Array] } },
  text:
   '{"jsonrpc":"2.0","result":"{\\"Ok\\":\\"QmT4qWA4uRzjkM2mX43So42TUv8nCMcptYeZtMRVXn9spw\\"}","id":"0"}\n',
  body:
   { jsonrpc: '2.0',
     result: '{"Ok":"QmT4qWA4uRzjkM2mX43So42TUv8nCMcptYeZtMRVXn9spw"}',
     id: '0' },
  files: undefined,
  buffered: true,
  headers:
   { 'content-type': 'application/json; charset=utf-8',
     connection: 'close',
     'content-length': '98',
     date: 'Tue, 25 Jun 2019 15:36:38 GMT' },
  header:
   { 'content-type': 'application/json; charset=utf-8',
     connection: 'close',
     'content-length': '98',
     date: 'Tue, 25 Jun 2019 15:36:38 GMT' },
  statusCode: 200,
  status: 200,
  statusType: 2,
  info: false,
  ok: true,
  redirect: false,
  clientError: false,
  serverError: false,
  error: false,
  created: false,
  accepted: false,
  noContent: false,
  badRequest: false,
  unauthorized: false,
  notAcceptable: false,
  forbidden: false,
  notFound: false,
  unprocessableEntity: false,
  type: 'application/json',
  charset: 'utf-8',
  links: {},
  setEncoding: [Function: bound ],
  redirects: [],
  pipe: [Function] }
Response {
  _events: [Object: null prototype] {},
  _eventsCount: 0,
  _maxListeners: undefined,
  res:
   IncomingMessage {
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: true,
        endEmitted: true,
        reading: false,
        sync: true,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        paused: false,
        emitClose: true,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: true,
        decoder: [StringDecoder],
        encoding: 'utf8' },
     readable: false,
     _events:
      [Object: null prototype] {
        end: [Array],
        data: [Array],
        error: [Array],
        close: [Function: bound emit] },
     _eventsCount: 4,
     _maxListeners: undefined,
     socket:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(asyncId)]: 81,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     connection:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(asyncId)]: 81,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     httpVersionMajor: 1,
     httpVersionMinor: 1,
     httpVersion: '1.1',
     complete: true,
     headers:
      { 'content-type': 'application/json; charset=utf-8',
        connection: 'close',
        'content-length': '111',
        date: 'Tue, 25 Jun 2019 15:36:38 GMT' },
     rawHeaders:
      [ 'content-type',
        'application/json; charset=utf-8',
        'connection',
        'close',
        'content-length',
        '111',
        'date',
        'Tue, 25 Jun 2019 15:36:38 GMT' ],
     trailers: {},
     rawTrailers: [],
     aborted: false,
     upgrade: false,
     url: '',
     method: null,
     statusCode: 200,
     statusMessage: 'OK',
     client:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(asyncId)]: 81,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     _consuming: false,
     _dumped: false,
     req:
      ClientRequest {
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: 245,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [Socket],
        connection: [Socket],
        _header:
         'POST / HTTP/1.1\r\nHost: localhost:8888\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/5.0.6\r\nContent-Type: application/json\r\naccept: json\r\nContent-Length: 245\r\nConnection: close\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput],
        agent: [Agent],
        socketPath: undefined,
        timeout: undefined,
        method: 'POST',
        path: '/',
        _ended: true,
        res: [Circular],
        aborted: undefined,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     text:
      '{"jsonrpc":"2.0","result":"{\\"SerializationError\\":\\"missing field `item_b` at line 1 column 109\\"}","id":"0"}\n' },
  request:
   Request {
     _events: [Object: null prototype] { abort: [Function] },
     _eventsCount: 1,
     _maxListeners: undefined,
     _enableHttp2: false,
     _agent: false,
     _formData: null,
     method: 'POST',
     url: 'http://localhost:8888',
     _header:
      { 'user-agent': 'node-superagent/5.0.6',
        'content-type': 'application/json',
        accept: 'json' },
     header:
      { 'User-Agent': 'node-superagent/5.0.6',
        'Content-Type': 'application/json',
        accept: 'json' },
     writable: true,
     _redirects: 0,
     _maxRedirects: 5,
     cookies: '',
     qs: {},
     _query: [],
     qsRaw: [],
     _redirectList: [],
     _streamRequest: false,
     _data:
      { jsonrpc: '2.0', id: '0', method: 'call', params: [Object] },
     req:
      ClientRequest {
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: 245,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [Socket],
        connection: [Socket],
        _header:
         'POST / HTTP/1.1\r\nHost: localhost:8888\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/5.0.6\r\nContent-Type: application/json\r\naccept: json\r\nContent-Length: 245\r\nConnection: close\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput],
        agent: [Agent],
        socketPath: undefined,
        timeout: undefined,
        method: 'POST',
        path: '/',
        _ended: true,
        res: [IncomingMessage],
        aborted: undefined,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     protocol: 'http:',
     host: 'localhost:8888',
     _endCalled: true,
     _callback: [Function],
     _fullfilledPromise: Promise { [Circular] },
     res:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 200,
        statusMessage: 'OK',
        client: [Socket],
        _consuming: false,
        _dumped: false,
        req: [ClientRequest],
        text:
         '{"jsonrpc":"2.0","result":"{\\"SerializationError\\":\\"missing field `item_b` at line 1 column 109\\"}","id":"0"}\n' },
     _resBuffered: true,
     response: [Circular],
     called: true },
  req:
   ClientRequest {
     _events:
      [Object: null prototype] {
        drain: [Function],
        error: [Function],
        prefinish: [Function: requestOnPrefinish] },
     _eventsCount: 3,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: true,
     sendDate: false,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: 245,
     _hasBody: true,
     _trailer: '',
     finished: true,
     _headerSent: true,
     socket:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 81,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     connection:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 81,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     _header:
      'POST / HTTP/1.1\r\nHost: localhost:8888\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/5.0.6\r\nContent-Type: application/json\r\naccept: json\r\nContent-Length: 245\r\nConnection: close\r\n\r\n',
     _onPendingData: [Function: noopPendingOutput],
     agent:
      Agent {
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        defaultPort: 80,
        protocol: 'http:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256 },
     socketPath: undefined,
     timeout: undefined,
     method: 'POST',
     path: '/',
     _ended: true,
     res:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 200,
        statusMessage: 'OK',
        client: [Socket],
        _consuming: false,
        _dumped: false,
        req: [Circular],
        text:
         '{"jsonrpc":"2.0","result":"{\\"SerializationError\\":\\"missing field `item_b` at line 1 column 109\\"}","id":"0"}\n' },
     aborted: undefined,
     timeoutCb: null,
     upgradeOrConnect: false,
     parser: null,
     maxHeadersCount: null,
     [Symbol(isCorked)]: false,
     [Symbol(outHeadersKey)]:
      [Object: null prototype] {
        host: [Array],
        'accept-encoding': [Array],
        'user-agent': [Array],
        'content-type': [Array],
        accept: [Array],
        'content-length': [Array] } },
  text:
   '{"jsonrpc":"2.0","result":"{\\"SerializationError\\":\\"missing field `item_b` at line 1 column 109\\"}","id":"0"}\n',
  body:
   { jsonrpc: '2.0',
     result:
      '{"SerializationError":"missing field `item_b` at line 1 column 109"}',
     id: '0' },
  files: undefined,
  buffered: true,
  headers:
   { 'content-type': 'application/json; charset=utf-8',
     connection: 'close',
     'content-length': '111',
     date: 'Tue, 25 Jun 2019 15:36:38 GMT' },
  header:
   { 'content-type': 'application/json; charset=utf-8',
     connection: 'close',
     'content-length': '111',
     date: 'Tue, 25 Jun 2019 15:36:38 GMT' },
  statusCode: 200,
  status: 200,
  statusType: 2,
  info: false,
  ok: true,
  redirect: false,
  clientError: false,
  serverError: false,
  error: false,
  created: false,
  accepted: false,
  noContent: false,
  badRequest: false,
  unauthorized: false,
  notAcceptable: false,
  forbidden: false,
  notFound: false,
  unprocessableEntity: false,
  type: 'application/json',
  charset: 'utf-8',
  links: {},
  setEncoding: [Function: bound ],
  redirects: [],
  pipe: [Function] }
undefined
Response {
  _events: [Object: null prototype] {},
  _eventsCount: 0,
  _maxListeners: undefined,
  res:
   IncomingMessage {
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: true,
        endEmitted: true,
        reading: false,
        sync: true,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        paused: false,
        emitClose: true,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: true,
        decoder: [StringDecoder],
        encoding: 'utf8' },
     readable: false,
     _events:
      [Object: null prototype] {
        end: [Array],
        data: [Array],
        error: [Array],
        close: [Function: bound emit] },
     _eventsCount: 4,
     _maxListeners: undefined,
     socket:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(asyncId)]: 101,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     connection:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(asyncId)]: 101,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     httpVersionMajor: 1,
     httpVersionMinor: 1,
     httpVersion: '1.1',
     complete: true,
     headers:
      { 'content-type': 'application/json; charset=utf-8',
        connection: 'close',
        'content-length': '98',
        date: 'Tue, 25 Jun 2019 15:36:38 GMT' },
     rawHeaders:
      [ 'content-type',
        'application/json; charset=utf-8',
        'connection',
        'close',
        'content-length',
        '98',
        'date',
        'Tue, 25 Jun 2019 15:36:38 GMT' ],
     trailers: {},
     rawTrailers: [],
     aborted: false,
     upgrade: false,
     url: '',
     method: null,
     statusCode: 200,
     statusMessage: 'OK',
     client:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(asyncId)]: 101,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     _consuming: false,
     _dumped: false,
     req:
      ClientRequest {
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: 318,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [Socket],
        connection: [Socket],
        _header:
         'POST / HTTP/1.1\r\nHost: localhost:8888\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/5.0.6\r\nContent-Type: application/json\r\naccept: json\r\nContent-Length: 318\r\nConnection: close\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput],
        agent: [Agent],
        socketPath: undefined,
        timeout: undefined,
        method: 'POST',
        path: '/',
        _ended: true,
        res: [Circular],
        aborted: undefined,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     text:
      '{"jsonrpc":"2.0","result":"{\\"Ok\\":\\"QmSHjDcayFrXe5BTY7VKCV6P61zetS2NxigLuAUChyZDrh\\"}","id":"0"}\n' },
  request:
   Request {
     _events: [Object: null prototype] { abort: [Function] },
     _eventsCount: 1,
     _maxListeners: undefined,
     _enableHttp2: false,
     _agent: false,
     _formData: null,
     method: 'POST',
     url: 'http://localhost:8888',
     _header:
      { 'user-agent': 'node-superagent/5.0.6',
        'content-type': 'application/json',
        accept: 'json' },
     header:
      { 'User-Agent': 'node-superagent/5.0.6',
        'Content-Type': 'application/json',
        accept: 'json' },
     writable: true,
     _redirects: 0,
     _maxRedirects: 5,
     cookies: '',
     qs: {},
     _query: [],
     qsRaw: [],
     _redirectList: [],
     _streamRequest: false,
     _data:
      { jsonrpc: '2.0', id: '0', method: 'call', params: [Object] },
     req:
      ClientRequest {
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: 318,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [Socket],
        connection: [Socket],
        _header:
         'POST / HTTP/1.1\r\nHost: localhost:8888\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/5.0.6\r\nContent-Type: application/json\r\naccept: json\r\nContent-Length: 318\r\nConnection: close\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput],
        agent: [Agent],
        socketPath: undefined,
        timeout: undefined,
        method: 'POST',
        path: '/',
        _ended: true,
        res: [IncomingMessage],
        aborted: undefined,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     protocol: 'http:',
     host: 'localhost:8888',
     _endCalled: true,
     _callback: [Function],
     _fullfilledPromise: Promise { [Circular] },
     res:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 200,
        statusMessage: 'OK',
        client: [Socket],
        _consuming: false,
        _dumped: false,
        req: [ClientRequest],
        text:
         '{"jsonrpc":"2.0","result":"{\\"Ok\\":\\"QmSHjDcayFrXe5BTY7VKCV6P61zetS2NxigLuAUChyZDrh\\"}","id":"0"}\n' },
     _resBuffered: true,
     response: [Circular],
     called: true },
  req:
   ClientRequest {
     _events:
      [Object: null prototype] {
        drain: [Function],
        error: [Function],
        prefinish: [Function: requestOnPrefinish] },
     _eventsCount: 3,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: true,
     sendDate: false,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: 318,
     _hasBody: true,
     _trailer: '',
     finished: true,
     _headerSent: true,
     socket:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 101,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     connection:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 101,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     _header:
      'POST / HTTP/1.1\r\nHost: localhost:8888\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/5.0.6\r\nContent-Type: application/json\r\naccept: json\r\nContent-Length: 318\r\nConnection: close\r\n\r\n',
     _onPendingData: [Function: noopPendingOutput],
     agent:
      Agent {
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        defaultPort: 80,
        protocol: 'http:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256 },
     socketPath: undefined,
     timeout: undefined,
     method: 'POST',
     path: '/',
     _ended: true,
     res:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 200,
        statusMessage: 'OK',
        client: [Socket],
        _consuming: false,
        _dumped: false,
        req: [Circular],
        text:
         '{"jsonrpc":"2.0","result":"{\\"Ok\\":\\"QmSHjDcayFrXe5BTY7VKCV6P61zetS2NxigLuAUChyZDrh\\"}","id":"0"}\n' },
     aborted: undefined,
     timeoutCb: null,
     upgradeOrConnect: false,
     parser: null,
     maxHeadersCount: null,
     [Symbol(isCorked)]: false,
     [Symbol(outHeadersKey)]:
      [Object: null prototype] {
        host: [Array],
        'accept-encoding': [Array],
        'user-agent': [Array],
        'content-type': [Array],
        accept: [Array],
        'content-length': [Array] } },
  text:
   '{"jsonrpc":"2.0","result":"{\\"Ok\\":\\"QmSHjDcayFrXe5BTY7VKCV6P61zetS2NxigLuAUChyZDrh\\"}","id":"0"}\n',
  body:
   { jsonrpc: '2.0',
     result: '{"Ok":"QmSHjDcayFrXe5BTY7VKCV6P61zetS2NxigLuAUChyZDrh"}',
     id: '0' },
  files: undefined,
  buffered: true,
  headers:
   { 'content-type': 'application/json; charset=utf-8',
     connection: 'close',
     'content-length': '98',
     date: 'Tue, 25 Jun 2019 15:36:38 GMT' },
  header:
   { 'content-type': 'application/json; charset=utf-8',
     connection: 'close',
     'content-length': '98',
     date: 'Tue, 25 Jun 2019 15:36:38 GMT' },
  statusCode: 200,
  status: 200,
  statusType: 2,
  info: false,
  ok: true,
  redirect: false,
  clientError: false,
  serverError: false,
  error: false,
  created: false,
  accepted: false,
  noContent: false,
  badRequest: false,
  unauthorized: false,
  notAcceptable: false,
  forbidden: false,
  notFound: false,
  unprocessableEntity: false,
  type: 'application/json',
  charset: 'utf-8',
  links: {},
  setEncoding: [Function: bound ],
  redirects: [],
  pipe: [Function] }
Response {
  _events: [Object: null prototype] {},
  _eventsCount: 0,
  _maxListeners: undefined,
  res:
   IncomingMessage {
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: true,
        endEmitted: true,
        reading: false,
        sync: true,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        paused: false,
        emitClose: true,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: true,
        decoder: [StringDecoder],
        encoding: 'utf8' },
     readable: false,
     _events:
      [Object: null prototype] {
        end: [Array],
        data: [Array],
        error: [Array],
        close: [Function: bound emit] },
     _eventsCount: 4,
     _maxListeners: undefined,
     socket:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(asyncId)]: 120,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     connection:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(asyncId)]: 120,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     httpVersionMajor: 1,
     httpVersionMinor: 1,
     httpVersion: '1.1',
     complete: true,
     headers:
      { 'content-type': 'application/json; charset=utf-8',
        connection: 'close',
        'content-length': '111',
        date: 'Tue, 25 Jun 2019 15:36:38 GMT' },
     rawHeaders:
      [ 'content-type',
        'application/json; charset=utf-8',
        'connection',
        'close',
        'content-length',
        '111',
        'date',
        'Tue, 25 Jun 2019 15:36:38 GMT' ],
     trailers: {},
     rawTrailers: [],
     aborted: false,
     upgrade: false,
     url: '',
     method: null,
     statusCode: 200,
     statusMessage: 'OK',
     client:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(asyncId)]: 120,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     _consuming: false,
     _dumped: false,
     req:
      ClientRequest {
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: 245,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [Socket],
        connection: [Socket],
        _header:
         'POST / HTTP/1.1\r\nHost: localhost:8888\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/5.0.6\r\nContent-Type: application/json\r\naccept: json\r\nContent-Length: 245\r\nConnection: close\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput],
        agent: [Agent],
        socketPath: undefined,
        timeout: undefined,
        method: 'POST',
        path: '/',
        _ended: true,
        res: [Circular],
        aborted: undefined,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     text:
      '{"jsonrpc":"2.0","result":"{\\"SerializationError\\":\\"missing field `item_b` at line 1 column 109\\"}","id":"0"}\n' },
  request:
   Request {
     _events: [Object: null prototype] { abort: [Function] },
     _eventsCount: 1,
     _maxListeners: undefined,
     _enableHttp2: false,
     _agent: false,
     _formData: null,
     method: 'POST',
     url: 'http://localhost:8888',
     _header:
      { 'user-agent': 'node-superagent/5.0.6',
        'content-type': 'application/json',
        accept: 'json' },
     header:
      { 'User-Agent': 'node-superagent/5.0.6',
        'Content-Type': 'application/json',
        accept: 'json' },
     writable: true,
     _redirects: 0,
     _maxRedirects: 5,
     cookies: '',
     qs: {},
     _query: [],
     qsRaw: [],
     _redirectList: [],
     _streamRequest: false,
     _data:
      { jsonrpc: '2.0', id: '0', method: 'call', params: [Object] },
     req:
      ClientRequest {
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: 245,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [Socket],
        connection: [Socket],
        _header:
         'POST / HTTP/1.1\r\nHost: localhost:8888\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/5.0.6\r\nContent-Type: application/json\r\naccept: json\r\nContent-Length: 245\r\nConnection: close\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput],
        agent: [Agent],
        socketPath: undefined,
        timeout: undefined,
        method: 'POST',
        path: '/',
        _ended: true,
        res: [IncomingMessage],
        aborted: undefined,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     protocol: 'http:',
     host: 'localhost:8888',
     _endCalled: true,
     _callback: [Function],
     _fullfilledPromise: Promise { [Circular] },
     res:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 200,
        statusMessage: 'OK',
        client: [Socket],
        _consuming: false,
        _dumped: false,
        req: [ClientRequest],
        text:
         '{"jsonrpc":"2.0","result":"{\\"SerializationError\\":\\"missing field `item_b` at line 1 column 109\\"}","id":"0"}\n' },
     _resBuffered: true,
     response: [Circular],
     called: true },
  req:
   ClientRequest {
     _events:
      [Object: null prototype] {
        drain: [Function],
        error: [Function],
        prefinish: [Function: requestOnPrefinish] },
     _eventsCount: 3,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: true,
     sendDate: false,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: 245,
     _hasBody: true,
     _trailer: '',
     finished: true,
     _headerSent: true,
     socket:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 120,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     connection:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 120,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     _header:
      'POST / HTTP/1.1\r\nHost: localhost:8888\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/5.0.6\r\nContent-Type: application/json\r\naccept: json\r\nContent-Length: 245\r\nConnection: close\r\n\r\n',
     _onPendingData: [Function: noopPendingOutput],
     agent:
      Agent {
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        defaultPort: 80,
        protocol: 'http:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256 },
     socketPath: undefined,
     timeout: undefined,
     method: 'POST',
     path: '/',
     _ended: true,
     res:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 200,
        statusMessage: 'OK',
        client: [Socket],
        _consuming: false,
        _dumped: false,
        req: [Circular],
        text:
         '{"jsonrpc":"2.0","result":"{\\"SerializationError\\":\\"missing field `item_b` at line 1 column 109\\"}","id":"0"}\n' },
     aborted: undefined,
     timeoutCb: null,
     upgradeOrConnect: false,
     parser: null,
     maxHeadersCount: null,
     [Symbol(isCorked)]: false,
     [Symbol(outHeadersKey)]:
      [Object: null prototype] {
        host: [Array],
        'accept-encoding': [Array],
        'user-agent': [Array],
        'content-type': [Array],
        accept: [Array],
        'content-length': [Array] } },
  text:
   '{"jsonrpc":"2.0","result":"{\\"SerializationError\\":\\"missing field `item_b` at line 1 column 109\\"}","id":"0"}\n',
  body:
   { jsonrpc: '2.0',
     result:
      '{"SerializationError":"missing field `item_b` at line 1 column 109"}',
     id: '0' },
  files: undefined,
  buffered: true,
  headers:
   { 'content-type': 'application/json; charset=utf-8',
     connection: 'close',
     'content-length': '111',
     date: 'Tue, 25 Jun 2019 15:36:38 GMT' },
  header:
   { 'content-type': 'application/json; charset=utf-8',
     connection: 'close',
     'content-length': '111',
     date: 'Tue, 25 Jun 2019 15:36:38 GMT' },
  statusCode: 200,
  status: 200,
  statusType: 2,
  info: false,
  ok: true,
  redirect: false,
  clientError: false,
  serverError: false,
  error: false,
  created: false,
  accepted: false,
  noContent: false,
  badRequest: false,
  unauthorized: false,
  notAcceptable: false,
  forbidden: false,
  notFound: false,
  unprocessableEntity: false,
  type: 'application/json',
  charset: 'utf-8',
  links: {},
  setEncoding: [Function: bound ],
  redirects: [],
  pipe: [Function] }
undefined
Response {
  _events: [Object: null prototype] {},
  _eventsCount: 0,
  _maxListeners: undefined,
  res:
   IncomingMessage {
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: true,
        endEmitted: true,
        reading: false,
        sync: true,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        paused: false,
        emitClose: true,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: true,
        decoder: [StringDecoder],
        encoding: 'utf8' },
     readable: false,
     _events:
      [Object: null prototype] {
        end: [Array],
        data: [Array],
        error: [Array],
        close: [Function: bound emit] },
     _eventsCount: 4,
     _maxListeners: undefined,
     socket:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(asyncId)]: 140,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     connection:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(asyncId)]: 140,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     httpVersionMajor: 1,
     httpVersionMinor: 1,
     httpVersion: '1.1',
     complete: true,
     headers:
      { 'content-type': 'application/json; charset=utf-8',
        connection: 'close',
        'content-length': '98',
        date: 'Tue, 25 Jun 2019 15:36:38 GMT' },
     rawHeaders:
      [ 'content-type',
        'application/json; charset=utf-8',
        'connection',
        'close',
        'content-length',
        '98',
        'date',
        'Tue, 25 Jun 2019 15:36:38 GMT' ],
     trailers: {},
     rawTrailers: [],
     aborted: false,
     upgrade: false,
     url: '',
     method: null,
     statusCode: 200,
     statusMessage: 'OK',
     client:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(asyncId)]: 140,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     _consuming: false,
     _dumped: false,
     req:
      ClientRequest {
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: 318,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [Socket],
        connection: [Socket],
        _header:
         'POST / HTTP/1.1\r\nHost: localhost:8888\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/5.0.6\r\nContent-Type: application/json\r\naccept: json\r\nContent-Length: 318\r\nConnection: close\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput],
        agent: [Agent],
        socketPath: undefined,
        timeout: undefined,
        method: 'POST',
        path: '/',
        _ended: true,
        res: [Circular],
        aborted: undefined,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     text:
      '{"jsonrpc":"2.0","result":"{\\"Ok\\":\\"QmRddbZbDCYzWpXYCk9N6E6MYVaobNbWwheoZf7wjrMNUJ\\"}","id":"0"}\n' },
  request:
   Request {
     _events: [Object: null prototype] { abort: [Function] },
     _eventsCount: 1,
     _maxListeners: undefined,
     _enableHttp2: false,
     _agent: false,
     _formData: null,
     method: 'POST',
     url: 'http://localhost:8888',
     _header:
      { 'user-agent': 'node-superagent/5.0.6',
        'content-type': 'application/json',
        accept: 'json' },
     header:
      { 'User-Agent': 'node-superagent/5.0.6',
        'Content-Type': 'application/json',
        accept: 'json' },
     writable: true,
     _redirects: 0,
     _maxRedirects: 5,
     cookies: '',
     qs: {},
     _query: [],
     qsRaw: [],
     _redirectList: [],
     _streamRequest: false,
     _data:
      { jsonrpc: '2.0', id: '0', method: 'call', params: [Object] },
     req:
      ClientRequest {
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: 318,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [Socket],
        connection: [Socket],
        _header:
         'POST / HTTP/1.1\r\nHost: localhost:8888\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/5.0.6\r\nContent-Type: application/json\r\naccept: json\r\nContent-Length: 318\r\nConnection: close\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput],
        agent: [Agent],
        socketPath: undefined,
        timeout: undefined,
        method: 'POST',
        path: '/',
        _ended: true,
        res: [IncomingMessage],
        aborted: undefined,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     protocol: 'http:',
     host: 'localhost:8888',
     _endCalled: true,
     _callback: [Function],
     _fullfilledPromise: Promise { [Circular] },
     res:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 200,
        statusMessage: 'OK',
        client: [Socket],
        _consuming: false,
        _dumped: false,
        req: [ClientRequest],
        text:
         '{"jsonrpc":"2.0","result":"{\\"Ok\\":\\"QmRddbZbDCYzWpXYCk9N6E6MYVaobNbWwheoZf7wjrMNUJ\\"}","id":"0"}\n' },
     _resBuffered: true,
     response: [Circular],
     called: true },
  req:
   ClientRequest {
     _events:
      [Object: null prototype] {
        drain: [Function],
        error: [Function],
        prefinish: [Function: requestOnPrefinish] },
     _eventsCount: 3,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: true,
     sendDate: false,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: 318,
     _hasBody: true,
     _trailer: '',
     finished: true,
     _headerSent: true,
     socket:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 140,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     connection:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 140,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     _header:
      'POST / HTTP/1.1\r\nHost: localhost:8888\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/5.0.6\r\nContent-Type: application/json\r\naccept: json\r\nContent-Length: 318\r\nConnection: close\r\n\r\n',
     _onPendingData: [Function: noopPendingOutput],
     agent:
      Agent {
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        defaultPort: 80,
        protocol: 'http:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256 },
     socketPath: undefined,
     timeout: undefined,
     method: 'POST',
     path: '/',
     _ended: true,
     res:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 200,
        statusMessage: 'OK',
        client: [Socket],
        _consuming: false,
        _dumped: false,
        req: [Circular],
        text:
         '{"jsonrpc":"2.0","result":"{\\"Ok\\":\\"QmRddbZbDCYzWpXYCk9N6E6MYVaobNbWwheoZf7wjrMNUJ\\"}","id":"0"}\n' },
     aborted: undefined,
     timeoutCb: null,
     upgradeOrConnect: false,
     parser: null,
     maxHeadersCount: null,
     [Symbol(isCorked)]: false,
     [Symbol(outHeadersKey)]:
      [Object: null prototype] {
        host: [Array],
        'accept-encoding': [Array],
        'user-agent': [Array],
        'content-type': [Array],
        accept: [Array],
        'content-length': [Array] } },
  text:
   '{"jsonrpc":"2.0","result":"{\\"Ok\\":\\"QmRddbZbDCYzWpXYCk9N6E6MYVaobNbWwheoZf7wjrMNUJ\\"}","id":"0"}\n',
  body:
   { jsonrpc: '2.0',
     result: '{"Ok":"QmRddbZbDCYzWpXYCk9N6E6MYVaobNbWwheoZf7wjrMNUJ"}',
     id: '0' },
  files: undefined,
  buffered: true,
  headers:
   { 'content-type': 'application/json; charset=utf-8',
     connection: 'close',
     'content-length': '98',
     date: 'Tue, 25 Jun 2019 15:36:38 GMT' },
  header:
   { 'content-type': 'application/json; charset=utf-8',
     connection: 'close',
     'content-length': '98',
     date: 'Tue, 25 Jun 2019 15:36:38 GMT' },
  statusCode: 200,
  status: 200,
  statusType: 2,
  info: false,
  ok: true,
  redirect: false,
  clientError: false,
  serverError: false,
  error: false,
  created: false,
  accepted: false,
  noContent: false,
  badRequest: false,
  unauthorized: false,
  notAcceptable: false,
  forbidden: false,
  notFound: false,
  unprocessableEntity: false,
  type: 'application/json',
  charset: 'utf-8',
  links: {},
  setEncoding: [Function: bound ],
  redirects: [],
  pipe: [Function] }
Response {
  _events: [Object: null prototype] {},
  _eventsCount: 0,
  _maxListeners: undefined,
  res:
   IncomingMessage {
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: true,
        endEmitted: true,
        reading: false,
        sync: true,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        paused: false,
        emitClose: true,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: true,
        decoder: [StringDecoder],
        encoding: 'utf8' },
     readable: false,
     _events:
      [Object: null prototype] {
        end: [Array],
        data: [Array],
        error: [Array],
        close: [Function: bound emit] },
     _eventsCount: 4,
     _maxListeners: undefined,
     socket:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(asyncId)]: 159,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     connection:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(asyncId)]: 159,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     httpVersionMajor: 1,
     httpVersionMinor: 1,
     httpVersion: '1.1',
     complete: true,
     headers:
      { 'content-type': 'application/json; charset=utf-8',
        connection: 'close',
        'content-length': '111',
        date: 'Tue, 25 Jun 2019 15:36:38 GMT' },
     rawHeaders:
      [ 'content-type',
        'application/json; charset=utf-8',
        'connection',
        'close',
        'content-length',
        '111',
        'date',
        'Tue, 25 Jun 2019 15:36:38 GMT' ],
     trailers: {},
     rawTrailers: [],
     aborted: false,
     upgrade: false,
     url: '',
     method: null,
     statusCode: 200,
     statusMessage: 'OK',
     client:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(asyncId)]: 159,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     _consuming: false,
     _dumped: false,
     req:
      ClientRequest {
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: 245,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [Socket],
        connection: [Socket],
        _header:
         'POST / HTTP/1.1\r\nHost: localhost:8888\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/5.0.6\r\nContent-Type: application/json\r\naccept: json\r\nContent-Length: 245\r\nConnection: close\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput],
        agent: [Agent],
        socketPath: undefined,
        timeout: undefined,
        method: 'POST',
        path: '/',
        _ended: true,
        res: [Circular],
        aborted: undefined,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     text:
      '{"jsonrpc":"2.0","result":"{\\"SerializationError\\":\\"missing field `item_b` at line 1 column 109\\"}","id":"0"}\n' },
  request:
   Request {
     _events: [Object: null prototype] { abort: [Function] },
     _eventsCount: 1,
     _maxListeners: undefined,
     _enableHttp2: false,
     _agent: false,
     _formData: null,
     method: 'POST',
     url: 'http://localhost:8888',
     _header:
      { 'user-agent': 'node-superagent/5.0.6',
        'content-type': 'application/json',
        accept: 'json' },
     header:
      { 'User-Agent': 'node-superagent/5.0.6',
        'Content-Type': 'application/json',
        accept: 'json' },
     writable: true,
     _redirects: 0,
     _maxRedirects: 5,
     cookies: '',
     qs: {},
     _query: [],
     qsRaw: [],
     _redirectList: [],
     _streamRequest: false,
     _data:
      { jsonrpc: '2.0', id: '0', method: 'call', params: [Object] },
     req:
      ClientRequest {
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: 245,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [Socket],
        connection: [Socket],
        _header:
         'POST / HTTP/1.1\r\nHost: localhost:8888\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/5.0.6\r\nContent-Type: application/json\r\naccept: json\r\nContent-Length: 245\r\nConnection: close\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput],
        agent: [Agent],
        socketPath: undefined,
        timeout: undefined,
        method: 'POST',
        path: '/',
        _ended: true,
        res: [IncomingMessage],
        aborted: undefined,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     protocol: 'http:',
     host: 'localhost:8888',
     _endCalled: true,
     _callback: [Function],
     _fullfilledPromise: Promise { [Circular] },
     res:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 200,
        statusMessage: 'OK',
        client: [Socket],
        _consuming: false,
        _dumped: false,
        req: [ClientRequest],
        text:
         '{"jsonrpc":"2.0","result":"{\\"SerializationError\\":\\"missing field `item_b` at line 1 column 109\\"}","id":"0"}\n' },
     _resBuffered: true,
     response: [Circular],
     called: true },
  req:
   ClientRequest {
     _events:
      [Object: null prototype] {
        drain: [Function],
        error: [Function],
        prefinish: [Function: requestOnPrefinish] },
     _eventsCount: 3,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: true,
     sendDate: false,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: 245,
     _hasBody: true,
     _trailer: '',
     finished: true,
     _headerSent: true,
     socket:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 159,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     connection:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 159,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     _header:
      'POST / HTTP/1.1\r\nHost: localhost:8888\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/5.0.6\r\nContent-Type: application/json\r\naccept: json\r\nContent-Length: 245\r\nConnection: close\r\n\r\n',
     _onPendingData: [Function: noopPendingOutput],
     agent:
      Agent {
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        defaultPort: 80,
        protocol: 'http:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256 },
     socketPath: undefined,
     timeout: undefined,
     method: 'POST',
     path: '/',
     _ended: true,
     res:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 200,
        statusMessage: 'OK',
        client: [Socket],
        _consuming: false,
        _dumped: false,
        req: [Circular],
        text:
         '{"jsonrpc":"2.0","result":"{\\"SerializationError\\":\\"missing field `item_b` at line 1 column 109\\"}","id":"0"}\n' },
     aborted: undefined,
     timeoutCb: null,
     upgradeOrConnect: false,
     parser: null,
     maxHeadersCount: null,
     [Symbol(isCorked)]: false,
     [Symbol(outHeadersKey)]:
      [Object: null prototype] {
        host: [Array],
        'accept-encoding': [Array],
        'user-agent': [Array],
        'content-type': [Array],
        accept: [Array],
        'content-length': [Array] } },
  text:
   '{"jsonrpc":"2.0","result":"{\\"SerializationError\\":\\"missing field `item_b` at line 1 column 109\\"}","id":"0"}\n',
  body:
   { jsonrpc: '2.0',
     result:
      '{"SerializationError":"missing field `item_b` at line 1 column 109"}',
     id: '0' },
  files: undefined,
  buffered: true,
  headers:
   { 'content-type': 'application/json; charset=utf-8',
     connection: 'close',
     'content-length': '111',
     date: 'Tue, 25 Jun 2019 15:36:38 GMT' },
  header:
   { 'content-type': 'application/json; charset=utf-8',
     connection: 'close',
     'content-length': '111',
     date: 'Tue, 25 Jun 2019 15:36:38 GMT' },
  statusCode: 200,
  status: 200,
  statusType: 2,
  info: false,
  ok: true,
  redirect: false,
  clientError: false,
  serverError: false,
  error: false,
  created: false,
  accepted: false,
  noContent: false,
  badRequest: false,
  unauthorized: false,
  notAcceptable: false,
  forbidden: false,
  notFound: false,
  unprocessableEntity: false,
  type: 'application/json',
  charset: 'utf-8',
  links: {},
  setEncoding: [Function: bound ],
  redirects: [],
  pipe: [Function] }
undefined
Response {
  _events: [Object: null prototype] {},
  _eventsCount: 0,
  _maxListeners: undefined,
  res:
   IncomingMessage {
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: true,
        endEmitted: true,
        reading: false,
        sync: true,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        paused: false,
        emitClose: true,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: true,
        decoder: [StringDecoder],
        encoding: 'utf8' },
     readable: false,
     _events:
      [Object: null prototype] {
        end: [Array],
        data: [Array],
        error: [Array],
        close: [Function: bound emit] },
     _eventsCount: 4,
     _maxListeners: undefined,
     socket:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(asyncId)]: 179,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     connection:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(asyncId)]: 179,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     httpVersionMajor: 1,
     httpVersionMinor: 1,
     httpVersion: '1.1',
     complete: true,
     headers:
      { 'content-type': 'application/json; charset=utf-8',
        connection: 'close',
        'content-length': '98',
        date: 'Tue, 25 Jun 2019 15:36:38 GMT' },
     rawHeaders:
      [ 'content-type',
        'application/json; charset=utf-8',
        'connection',
        'close',
        'content-length',
        '98',
        'date',
        'Tue, 25 Jun 2019 15:36:38 GMT' ],
     trailers: {},
     rawTrailers: [],
     aborted: false,
     upgrade: false,
     url: '',
     method: null,
     statusCode: 200,
     statusMessage: 'OK',
     client:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(asyncId)]: 179,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     _consuming: false,
     _dumped: false,
     req:
      ClientRequest {
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: 318,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [Socket],
        connection: [Socket],
        _header:
         'POST / HTTP/1.1\r\nHost: localhost:8888\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/5.0.6\r\nContent-Type: application/json\r\naccept: json\r\nContent-Length: 318\r\nConnection: close\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput],
        agent: [Agent],
        socketPath: undefined,
        timeout: undefined,
        method: 'POST',
        path: '/',
        _ended: true,
        res: [Circular],
        aborted: undefined,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     text:
      '{"jsonrpc":"2.0","result":"{\\"Ok\\":\\"QmdXy7JF12qaDw7UMJ2WKSnLLvo6B4BPjbB8bu5JgMBG9E\\"}","id":"0"}\n' },
  request:
   Request {
     _events: [Object: null prototype] { abort: [Function] },
     _eventsCount: 1,
     _maxListeners: undefined,
     _enableHttp2: false,
     _agent: false,
     _formData: null,
     method: 'POST',
     url: 'http://localhost:8888',
     _header:
      { 'user-agent': 'node-superagent/5.0.6',
        'content-type': 'application/json',
        accept: 'json' },
     header:
      { 'User-Agent': 'node-superagent/5.0.6',
        'Content-Type': 'application/json',
        accept: 'json' },
     writable: true,
     _redirects: 0,
     _maxRedirects: 5,
     cookies: '',
     qs: {},
     _query: [],
     qsRaw: [],
     _redirectList: [],
     _streamRequest: false,
     _data:
      { jsonrpc: '2.0', id: '0', method: 'call', params: [Object] },
     req:
      ClientRequest {
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: 318,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [Socket],
        connection: [Socket],
        _header:
         'POST / HTTP/1.1\r\nHost: localhost:8888\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/5.0.6\r\nContent-Type: application/json\r\naccept: json\r\nContent-Length: 318\r\nConnection: close\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput],
        agent: [Agent],
        socketPath: undefined,
        timeout: undefined,
        method: 'POST',
        path: '/',
        _ended: true,
        res: [IncomingMessage],
        aborted: undefined,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     protocol: 'http:',
     host: 'localhost:8888',
     _endCalled: true,
     _callback: [Function],
     _fullfilledPromise: Promise { [Circular] },
     res:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 200,
        statusMessage: 'OK',
        client: [Socket],
        _consuming: false,
        _dumped: false,
        req: [ClientRequest],
        text:
         '{"jsonrpc":"2.0","result":"{\\"Ok\\":\\"QmdXy7JF12qaDw7UMJ2WKSnLLvo6B4BPjbB8bu5JgMBG9E\\"}","id":"0"}\n' },
     _resBuffered: true,
     response: [Circular],
     called: true },
  req:
   ClientRequest {
     _events:
      [Object: null prototype] {
        drain: [Function],
        error: [Function],
        prefinish: [Function: requestOnPrefinish] },
     _eventsCount: 3,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: true,
     sendDate: false,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: 318,
     _hasBody: true,
     _trailer: '',
     finished: true,
     _headerSent: true,
     socket:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 179,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     connection:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 179,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     _header:
      'POST / HTTP/1.1\r\nHost: localhost:8888\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/5.0.6\r\nContent-Type: application/json\r\naccept: json\r\nContent-Length: 318\r\nConnection: close\r\n\r\n',
     _onPendingData: [Function: noopPendingOutput],
     agent:
      Agent {
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        defaultPort: 80,
        protocol: 'http:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256 },
     socketPath: undefined,
     timeout: undefined,
     method: 'POST',
     path: '/',
     _ended: true,
     res:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 200,
        statusMessage: 'OK',
        client: [Socket],
        _consuming: false,
        _dumped: false,
        req: [Circular],
        text:
         '{"jsonrpc":"2.0","result":"{\\"Ok\\":\\"QmdXy7JF12qaDw7UMJ2WKSnLLvo6B4BPjbB8bu5JgMBG9E\\"}","id":"0"}\n' },
     aborted: undefined,
     timeoutCb: null,
     upgradeOrConnect: false,
     parser: null,
     maxHeadersCount: null,
     [Symbol(isCorked)]: false,
     [Symbol(outHeadersKey)]:
      [Object: null prototype] {
        host: [Array],
        'accept-encoding': [Array],
        'user-agent': [Array],
        'content-type': [Array],
        accept: [Array],
        'content-length': [Array] } },
  text:
   '{"jsonrpc":"2.0","result":"{\\"Ok\\":\\"QmdXy7JF12qaDw7UMJ2WKSnLLvo6B4BPjbB8bu5JgMBG9E\\"}","id":"0"}\n',
  body:
   { jsonrpc: '2.0',
     result: '{"Ok":"QmdXy7JF12qaDw7UMJ2WKSnLLvo6B4BPjbB8bu5JgMBG9E"}',
     id: '0' },
  files: undefined,
  buffered: true,
  headers:
   { 'content-type': 'application/json; charset=utf-8',
     connection: 'close',
     'content-length': '98',
     date: 'Tue, 25 Jun 2019 15:36:38 GMT' },
  header:
   { 'content-type': 'application/json; charset=utf-8',
     connection: 'close',
     'content-length': '98',
     date: 'Tue, 25 Jun 2019 15:36:38 GMT' },
  statusCode: 200,
  status: 200,
  statusType: 2,
  info: false,
  ok: true,
  redirect: false,
  clientError: false,
  serverError: false,
  error: false,
  created: false,
  accepted: false,
  noContent: false,
  badRequest: false,
  unauthorized: false,
  notAcceptable: false,
  forbidden: false,
  notFound: false,
  unprocessableEntity: false,
  type: 'application/json',
  charset: 'utf-8',
  links: {},
  setEncoding: [Function: bound ],
  redirects: [],
  pipe: [Function] }
Response {
  _events: [Object: null prototype] {},
  _eventsCount: 0,
  _maxListeners: undefined,
  res:
   IncomingMessage {
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: true,
        endEmitted: true,
        reading: false,
        sync: true,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        paused: false,
        emitClose: true,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: true,
        decoder: [StringDecoder],
        encoding: 'utf8' },
     readable: false,
     _events:
      [Object: null prototype] {
        end: [Array],
        data: [Array],
        error: [Array],
        close: [Function: bound emit] },
     _eventsCount: 4,
     _maxListeners: undefined,
     socket:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(asyncId)]: 198,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     connection:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(asyncId)]: 198,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     httpVersionMajor: 1,
     httpVersionMinor: 1,
     httpVersion: '1.1',
     complete: true,
     headers:
      { 'content-type': 'application/json; charset=utf-8',
        connection: 'close',
        'content-length': '111',
        date: 'Tue, 25 Jun 2019 15:36:38 GMT' },
     rawHeaders:
      [ 'content-type',
        'application/json; charset=utf-8',
        'connection',
        'close',
        'content-length',
        '111',
        'date',
        'Tue, 25 Jun 2019 15:36:38 GMT' ],
     trailers: {},
     rawTrailers: [],
     aborted: false,
     upgrade: false,
     url: '',
     method: null,
     statusCode: 200,
     statusMessage: 'OK',
     client:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(asyncId)]: 198,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     _consuming: false,
     _dumped: false,
     req:
      ClientRequest {
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: 245,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [Socket],
        connection: [Socket],
        _header:
         'POST / HTTP/1.1\r\nHost: localhost:8888\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/5.0.6\r\nContent-Type: application/json\r\naccept: json\r\nContent-Length: 245\r\nConnection: close\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput],
        agent: [Agent],
        socketPath: undefined,
        timeout: undefined,
        method: 'POST',
        path: '/',
        _ended: true,
        res: [Circular],
        aborted: undefined,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     text:
      '{"jsonrpc":"2.0","result":"{\\"SerializationError\\":\\"missing field `item_b` at line 1 column 109\\"}","id":"0"}\n' },
  request:
   Request {
     _events: [Object: null prototype] { abort: [Function] },
     _eventsCount: 1,
     _maxListeners: undefined,
     _enableHttp2: false,
     _agent: false,
     _formData: null,
     method: 'POST',
     url: 'http://localhost:8888',
     _header:
      { 'user-agent': 'node-superagent/5.0.6',
        'content-type': 'application/json',
        accept: 'json' },
     header:
      { 'User-Agent': 'node-superagent/5.0.6',
        'Content-Type': 'application/json',
        accept: 'json' },
     writable: true,
     _redirects: 0,
     _maxRedirects: 5,
     cookies: '',
     qs: {},
     _query: [],
     qsRaw: [],
     _redirectList: [],
     _streamRequest: false,
     _data:
      { jsonrpc: '2.0', id: '0', method: 'call', params: [Object] },
     req:
      ClientRequest {
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: 245,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [Socket],
        connection: [Socket],
        _header:
         'POST / HTTP/1.1\r\nHost: localhost:8888\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/5.0.6\r\nContent-Type: application/json\r\naccept: json\r\nContent-Length: 245\r\nConnection: close\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput],
        agent: [Agent],
        socketPath: undefined,
        timeout: undefined,
        method: 'POST',
        path: '/',
        _ended: true,
        res: [IncomingMessage],
        aborted: undefined,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     protocol: 'http:',
     host: 'localhost:8888',
     _endCalled: true,
     _callback: [Function],
     _fullfilledPromise: Promise { [Circular] },
     res:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 200,
        statusMessage: 'OK',
        client: [Socket],
        _consuming: false,
        _dumped: false,
        req: [ClientRequest],
        text:
         '{"jsonrpc":"2.0","result":"{\\"SerializationError\\":\\"missing field `item_b` at line 1 column 109\\"}","id":"0"}\n' },
     _resBuffered: true,
     response: [Circular],
     called: true },
  req:
   ClientRequest {
     _events:
      [Object: null prototype] {
        drain: [Function],
        error: [Function],
        prefinish: [Function: requestOnPrefinish] },
     _eventsCount: 3,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: true,
     sendDate: false,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: 245,
     _hasBody: true,
     _trailer: '',
     finished: true,
     _headerSent: true,
     socket:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 198,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     connection:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 198,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     _header:
      'POST / HTTP/1.1\r\nHost: localhost:8888\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/5.0.6\r\nContent-Type: application/json\r\naccept: json\r\nContent-Length: 245\r\nConnection: close\r\n\r\n',
     _onPendingData: [Function: noopPendingOutput],
     agent:
      Agent {
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        defaultPort: 80,
        protocol: 'http:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256 },
     socketPath: undefined,
     timeout: undefined,
     method: 'POST',
     path: '/',
     _ended: true,
     res:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 200,
        statusMessage: 'OK',
        client: [Socket],
        _consuming: false,
        _dumped: false,
        req: [Circular],
        text:
         '{"jsonrpc":"2.0","result":"{\\"SerializationError\\":\\"missing field `item_b` at line 1 column 109\\"}","id":"0"}\n' },
     aborted: undefined,
     timeoutCb: null,
     upgradeOrConnect: false,
     parser: null,
     maxHeadersCount: null,
     [Symbol(isCorked)]: false,
     [Symbol(outHeadersKey)]:
      [Object: null prototype] {
        host: [Array],
        'accept-encoding': [Array],
        'user-agent': [Array],
        'content-type': [Array],
        accept: [Array],
        'content-length': [Array] } },
  text:
   '{"jsonrpc":"2.0","result":"{\\"SerializationError\\":\\"missing field `item_b` at line 1 column 109\\"}","id":"0"}\n',
  body:
   { jsonrpc: '2.0',
     result:
      '{"SerializationError":"missing field `item_b` at line 1 column 109"}',
     id: '0' },
  files: undefined,
  buffered: true,
  headers:
   { 'content-type': 'application/json; charset=utf-8',
     connection: 'close',
     'content-length': '111',
     date: 'Tue, 25 Jun 2019 15:36:38 GMT' },
  header:
   { 'content-type': 'application/json; charset=utf-8',
     connection: 'close',
     'content-length': '111',
     date: 'Tue, 25 Jun 2019 15:36:38 GMT' },
  statusCode: 200,
  status: 200,
  statusType: 2,
  info: false,
  ok: true,
  redirect: false,
  clientError: false,
  serverError: false,
  error: false,
  created: false,
  accepted: false,
  noContent: false,
  badRequest: false,
  unauthorized: false,
  notAcceptable: false,
  forbidden: false,
  notFound: false,
  unprocessableEntity: false,
  type: 'application/json',
  charset: 'utf-8',
  links: {},
  setEncoding: [Function: bound ],
  redirects: [],
  pipe: [Function] }
undefined
Response {
  _events: [Object: null prototype] {},
  _eventsCount: 0,
  _maxListeners: undefined,
  res:
   IncomingMessage {
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: true,
        endEmitted: true,
        reading: false,
        sync: true,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        paused: false,
        emitClose: true,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: true,
        decoder: [StringDecoder],
        encoding: 'utf8' },
     readable: false,
     _events:
      [Object: null prototype] {
        end: [Array],
        data: [Array],
        error: [Array],
        close: [Function: bound emit] },
     _eventsCount: 4,
     _maxListeners: undefined,
     socket:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(asyncId)]: 218,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     connection:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(asyncId)]: 218,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     httpVersionMajor: 1,
     httpVersionMinor: 1,
     httpVersion: '1.1',
     complete: true,
     headers:
      { 'content-type': 'application/json; charset=utf-8',
        connection: 'close',
        'content-length': '98',
        date: 'Tue, 25 Jun 2019 15:36:38 GMT' },
     rawHeaders:
      [ 'content-type',
        'application/json; charset=utf-8',
        'connection',
        'close',
        'content-length',
        '98',
        'date',
        'Tue, 25 Jun 2019 15:36:38 GMT' ],
     trailers: {},
     rawTrailers: [],
     aborted: false,
     upgrade: false,
     url: '',
     method: null,
     statusCode: 200,
     statusMessage: 'OK',
     client:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(asyncId)]: 218,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     _consuming: false,
     _dumped: false,
     req:
      ClientRequest {
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: 318,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [Socket],
        connection: [Socket],
        _header:
         'POST / HTTP/1.1\r\nHost: localhost:8888\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/5.0.6\r\nContent-Type: application/json\r\naccept: json\r\nContent-Length: 318\r\nConnection: close\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput],
        agent: [Agent],
        socketPath: undefined,
        timeout: undefined,
        method: 'POST',
        path: '/',
        _ended: true,
        res: [Circular],
        aborted: undefined,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     text:
      '{"jsonrpc":"2.0","result":"{\\"Ok\\":\\"QmNaYJFKwYQ6Haovj4ffFpZjBDcekNWYskeDgPUWEPvjyM\\"}","id":"0"}\n' },
  request:
   Request {
     _events: [Object: null prototype] { abort: [Function] },
     _eventsCount: 1,
     _maxListeners: undefined,
     _enableHttp2: false,
     _agent: false,
     _formData: null,
     method: 'POST',
     url: 'http://localhost:8888',
     _header:
      { 'user-agent': 'node-superagent/5.0.6',
        'content-type': 'application/json',
        accept: 'json' },
     header:
      { 'User-Agent': 'node-superagent/5.0.6',
        'Content-Type': 'application/json',
        accept: 'json' },
     writable: true,
     _redirects: 0,
     _maxRedirects: 5,
     cookies: '',
     qs: {},
     _query: [],
     qsRaw: [],
     _redirectList: [],
     _streamRequest: false,
     _data:
      { jsonrpc: '2.0', id: '0', method: 'call', params: [Object] },
     req:
      ClientRequest {
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: 318,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [Socket],
        connection: [Socket],
        _header:
         'POST / HTTP/1.1\r\nHost: localhost:8888\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/5.0.6\r\nContent-Type: application/json\r\naccept: json\r\nContent-Length: 318\r\nConnection: close\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput],
        agent: [Agent],
        socketPath: undefined,
        timeout: undefined,
        method: 'POST',
        path: '/',
        _ended: true,
        res: [IncomingMessage],
        aborted: undefined,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     protocol: 'http:',
     host: 'localhost:8888',
     _endCalled: true,
     _callback: [Function],
     _fullfilledPromise: Promise { [Circular] },
     res:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 200,
        statusMessage: 'OK',
        client: [Socket],
        _consuming: false,
        _dumped: false,
        req: [ClientRequest],
        text:
         '{"jsonrpc":"2.0","result":"{\\"Ok\\":\\"QmNaYJFKwYQ6Haovj4ffFpZjBDcekNWYskeDgPUWEPvjyM\\"}","id":"0"}\n' },
     _resBuffered: true,
     response: [Circular],
     called: true },
  req:
   ClientRequest {
     _events:
      [Object: null prototype] {
        drain: [Function],
        error: [Function],
        prefinish: [Function: requestOnPrefinish] },
     _eventsCount: 3,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: true,
     sendDate: false,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: 318,
     _hasBody: true,
     _trailer: '',
     finished: true,
     _headerSent: true,
     socket:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 218,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     connection:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 218,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     _header:
      'POST / HTTP/1.1\r\nHost: localhost:8888\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/5.0.6\r\nContent-Type: application/json\r\naccept: json\r\nContent-Length: 318\r\nConnection: close\r\n\r\n',
     _onPendingData: [Function: noopPendingOutput],
     agent:
      Agent {
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        defaultPort: 80,
        protocol: 'http:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256 },
     socketPath: undefined,
     timeout: undefined,
     method: 'POST',
     path: '/',
     _ended: true,
     res:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 200,
        statusMessage: 'OK',
        client: [Socket],
        _consuming: false,
        _dumped: false,
        req: [Circular],
        text:
         '{"jsonrpc":"2.0","result":"{\\"Ok\\":\\"QmNaYJFKwYQ6Haovj4ffFpZjBDcekNWYskeDgPUWEPvjyM\\"}","id":"0"}\n' },
     aborted: undefined,
     timeoutCb: null,
     upgradeOrConnect: false,
     parser: null,
     maxHeadersCount: null,
     [Symbol(isCorked)]: false,
     [Symbol(outHeadersKey)]:
      [Object: null prototype] {
        host: [Array],
        'accept-encoding': [Array],
        'user-agent': [Array],
        'content-type': [Array],
        accept: [Array],
        'content-length': [Array] } },
  text:
   '{"jsonrpc":"2.0","result":"{\\"Ok\\":\\"QmNaYJFKwYQ6Haovj4ffFpZjBDcekNWYskeDgPUWEPvjyM\\"}","id":"0"}\n',
  body:
   { jsonrpc: '2.0',
     result: '{"Ok":"QmNaYJFKwYQ6Haovj4ffFpZjBDcekNWYskeDgPUWEPvjyM"}',
     id: '0' },
  files: undefined,
  buffered: true,
  headers:
   { 'content-type': 'application/json; charset=utf-8',
     connection: 'close',
     'content-length': '98',
     date: 'Tue, 25 Jun 2019 15:36:38 GMT' },
  header:
   { 'content-type': 'application/json; charset=utf-8',
     connection: 'close',
     'content-length': '98',
     date: 'Tue, 25 Jun 2019 15:36:38 GMT' },
  statusCode: 200,
  status: 200,
  statusType: 2,
  info: false,
  ok: true,
  redirect: false,
  clientError: false,
  serverError: false,
  error: false,
  created: false,
  accepted: false,
  noContent: false,
  badRequest: false,
  unauthorized: false,
  notAcceptable: false,
  forbidden: false,
  notFound: false,
  unprocessableEntity: false,
  type: 'application/json',
  charset: 'utf-8',
  links: {},
  setEncoding: [Function: bound ],
  redirects: [],
  pipe: [Function] }
Response {
  _events: [Object: null prototype] {},
  _eventsCount: 0,
  _maxListeners: undefined,
  res:
   IncomingMessage {
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: true,
        endEmitted: true,
        reading: false,
        sync: true,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        paused: false,
        emitClose: true,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: true,
        decoder: [StringDecoder],
        encoding: 'utf8' },
     readable: false,
     _events:
      [Object: null prototype] {
        end: [Array],
        data: [Array],
        error: [Array],
        close: [Function: bound emit] },
     _eventsCount: 4,
     _maxListeners: undefined,
     socket:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(asyncId)]: 237,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     connection:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(asyncId)]: 237,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     httpVersionMajor: 1,
     httpVersionMinor: 1,
     httpVersion: '1.1',
     complete: true,
     headers:
      { 'content-type': 'application/json; charset=utf-8',
        connection: 'close',
        'content-length': '111',
        date: 'Tue, 25 Jun 2019 15:36:39 GMT' },
     rawHeaders:
      [ 'content-type',
        'application/json; charset=utf-8',
        'connection',
        'close',
        'content-length',
        '111',
        'date',
        'Tue, 25 Jun 2019 15:36:39 GMT' ],
     trailers: {},
     rawTrailers: [],
     aborted: false,
     upgrade: false,
     url: '',
     method: null,
     statusCode: 200,
     statusMessage: 'OK',
     client:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(asyncId)]: 237,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     _consuming: false,
     _dumped: false,
     req:
      ClientRequest {
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: 245,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [Socket],
        connection: [Socket],
        _header:
         'POST / HTTP/1.1\r\nHost: localhost:8888\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/5.0.6\r\nContent-Type: application/json\r\naccept: json\r\nContent-Length: 245\r\nConnection: close\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput],
        agent: [Agent],
        socketPath: undefined,
        timeout: undefined,
        method: 'POST',
        path: '/',
        _ended: true,
        res: [Circular],
        aborted: undefined,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     text:
      '{"jsonrpc":"2.0","result":"{\\"SerializationError\\":\\"missing field `item_b` at line 1 column 109\\"}","id":"0"}\n' },
  request:
   Request {
     _events: [Object: null prototype] { abort: [Function] },
     _eventsCount: 1,
     _maxListeners: undefined,
     _enableHttp2: false,
     _agent: false,
     _formData: null,
     method: 'POST',
     url: 'http://localhost:8888',
     _header:
      { 'user-agent': 'node-superagent/5.0.6',
        'content-type': 'application/json',
        accept: 'json' },
     header:
      { 'User-Agent': 'node-superagent/5.0.6',
        'Content-Type': 'application/json',
        accept: 'json' },
     writable: true,
     _redirects: 0,
     _maxRedirects: 5,
     cookies: '',
     qs: {},
     _query: [],
     qsRaw: [],
     _redirectList: [],
     _streamRequest: false,
     _data:
      { jsonrpc: '2.0', id: '0', method: 'call', params: [Object] },
     req:
      ClientRequest {
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: 245,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [Socket],
        connection: [Socket],
        _header:
         'POST / HTTP/1.1\r\nHost: localhost:8888\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/5.0.6\r\nContent-Type: application/json\r\naccept: json\r\nContent-Length: 245\r\nConnection: close\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput],
        agent: [Agent],
        socketPath: undefined,
        timeout: undefined,
        method: 'POST',
        path: '/',
        _ended: true,
        res: [IncomingMessage],
        aborted: undefined,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     protocol: 'http:',
     host: 'localhost:8888',
     _endCalled: true,
     _callback: [Function],
     _fullfilledPromise: Promise { [Circular] },
     res:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 200,
        statusMessage: 'OK',
        client: [Socket],
        _consuming: false,
        _dumped: false,
        req: [ClientRequest],
        text:
         '{"jsonrpc":"2.0","result":"{\\"SerializationError\\":\\"missing field `item_b` at line 1 column 109\\"}","id":"0"}\n' },
     _resBuffered: true,
     response: [Circular],
     called: true },
  req:
   ClientRequest {
     _events:
      [Object: null prototype] {
        drain: [Function],
        error: [Function],
        prefinish: [Function: requestOnPrefinish] },
     _eventsCount: 3,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: true,
     sendDate: false,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: 245,
     _hasBody: true,
     _trailer: '',
     finished: true,
     _headerSent: true,
     socket:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 237,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     connection:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 237,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     _header:
      'POST / HTTP/1.1\r\nHost: localhost:8888\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/5.0.6\r\nContent-Type: application/json\r\naccept: json\r\nContent-Length: 245\r\nConnection: close\r\n\r\n',
     _onPendingData: [Function: noopPendingOutput],
     agent:
      Agent {
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        defaultPort: 80,
        protocol: 'http:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256 },
     socketPath: undefined,
     timeout: undefined,
     method: 'POST',
     path: '/',
     _ended: true,
     res:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 200,
        statusMessage: 'OK',
        client: [Socket],
        _consuming: false,
        _dumped: false,
        req: [Circular],
        text:
         '{"jsonrpc":"2.0","result":"{\\"SerializationError\\":\\"missing field `item_b` at line 1 column 109\\"}","id":"0"}\n' },
     aborted: undefined,
     timeoutCb: null,
     upgradeOrConnect: false,
     parser: null,
     maxHeadersCount: null,
     [Symbol(isCorked)]: false,
     [Symbol(outHeadersKey)]:
      [Object: null prototype] {
        host: [Array],
        'accept-encoding': [Array],
        'user-agent': [Array],
        'content-type': [Array],
        accept: [Array],
        'content-length': [Array] } },
  text:
   '{"jsonrpc":"2.0","result":"{\\"SerializationError\\":\\"missing field `item_b` at line 1 column 109\\"}","id":"0"}\n',
  body:
   { jsonrpc: '2.0',
     result:
      '{"SerializationError":"missing field `item_b` at line 1 column 109"}',
     id: '0' },
  files: undefined,
  buffered: true,
  headers:
   { 'content-type': 'application/json; charset=utf-8',
     connection: 'close',
     'content-length': '111',
     date: 'Tue, 25 Jun 2019 15:36:39 GMT' },
  header:
   { 'content-type': 'application/json; charset=utf-8',
     connection: 'close',
     'content-length': '111',
     date: 'Tue, 25 Jun 2019 15:36:39 GMT' },
  statusCode: 200,
  status: 200,
  statusType: 2,
  info: false,
  ok: true,
  redirect: false,
  clientError: false,
  serverError: false,
  error: false,
  created: false,
  accepted: false,
  noContent: false,
  badRequest: false,
  unauthorized: false,
  notAcceptable: false,
  forbidden: false,
  notFound: false,
  unprocessableEntity: false,
  type: 'application/json',
  charset: 'utf-8',
  links: {},
  setEncoding: [Function: bound ],
  redirects: [],
  pipe: [Function] }
undefined
Response {
  _events: [Object: null prototype] {},
  _eventsCount: 0,
  _maxListeners: undefined,
  res:
   IncomingMessage {
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: true,
        endEmitted: true,
        reading: false,
        sync: true,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        paused: false,
        emitClose: true,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: true,
        decoder: [StringDecoder],
        encoding: 'utf8' },
     readable: false,
     _events:
      [Object: null prototype] {
        end: [Array],
        data: [Array],
        error: [Array],
        close: [Function: bound emit] },
     _eventsCount: 4,
     _maxListeners: undefined,
     socket:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(asyncId)]: 257,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     connection:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(asyncId)]: 257,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     httpVersionMajor: 1,
     httpVersionMinor: 1,
     httpVersion: '1.1',
     complete: true,
     headers:
      { 'content-type': 'application/json; charset=utf-8',
        connection: 'close',
        'content-length': '6179',
        date: 'Tue, 25 Jun 2019 15:36:39 GMT' },
     rawHeaders:
      [ 'content-type',
        'application/json; charset=utf-8',
        'connection',
        'close',
        'content-length',
        '6179',
        'date',
        'Tue, 25 Jun 2019 15:36:39 GMT' ],
     trailers: {},
     rawTrailers: [],
     aborted: false,
     upgrade: false,
     url: '',
     method: null,
     statusCode: 200,
     statusMessage: 'OK',
     client:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(asyncId)]: 257,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     _consuming: false,
     _dumped: false,
     req:
      ClientRequest {
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: 284,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [Socket],
        connection: [Socket],
        _header:
         'POST / HTTP/1.1\r\nHost: localhost:8888\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/5.0.6\r\nContent-Type: application/json\r\naccept: json\r\nContent-Length: 284\r\nConnection: close\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput],
        agent: [Agent],
        socketPath: undefined,
        timeout: undefined,
        method: 'POST',
        path: '/',
        _ended: true,
        res: [Circular],
        aborted: undefined,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     text:
      '{"jsonrpc":"2.0","result":"{\\"Ok\\":{\\"name\\":\\"GeoHashElement\\",\\"items\\":[{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":1,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmT4qWA4uRzjkM2mX43So42TUv8nCMcptYeZtMRVXn9spw\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":2,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmSHjDcayFrXe5BTY7VKCV6P61zetS2NxigLuAUChyZDrh\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":3,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmRddbZbDCYzWpXYCk9N6E6MYVaobNbWwheoZf7wjrMNUJ\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":4,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmdXy7JF12qaDw7UMJ2WKSnLLvo6B4BPjbB8bu5JgMBG9E\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":5,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmNaYJFKwYQ6Haovj4ffFpZjBDcekNWYskeDgPUWEPvjyM\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":1,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmT4qWA4uRzjkM2mX43So42TUv8nCMcptYeZtMRVXn9spw\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":2,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmSHjDcayFrXe5BTY7VKCV6P61zetS2NxigLuAUChyZDrh\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":3,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmRddbZbDCYzWpXYCk9N6E6MYVaobNbWwheoZf7wjrMNUJ\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":4,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmdXy7JF12qaDw7UMJ2WKSnLLvo6B4BPjbB8bu5JgMBG9E\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":5,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmNaYJFKwYQ6Haovj4ffFpZjBDcekNWYskeDgPUWEPvjyM\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":1,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmT4qWA4uRzjkM2mX43So42TUv8nCMcptYeZtMRVXn9spw\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":2,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmSHjDcayFrXe5BTY7VKCV6P61zetS2NxigLuAUChyZDrh\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":3,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmRddbZbDCYzWpXYCk9N6E6MYVaobNbWwheoZf7wjrMNUJ\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":4,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmdXy7JF12qaDw7UMJ2WKSnLLvo6B4BPjbB8bu5JgMBG9E\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":5,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmNaYJFKwYQ6Haovj4ffFpZjBDcekNWYskeDgPUWEPvjyM\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":1,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmT4qWA4uRzjkM2mX43So42TUv8nCMcptYeZtMRVXn9spw\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":2,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmSHjDcayFrXe5BTY7VKCV6P61zetS2NxigLuAUChyZDrh\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":3,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmRddbZbDCYzWpXYCk9N6E6MYVaobNbWwheoZf7wjrMNUJ\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":4,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmdXy7JF12qaDw7UMJ2WKSnLLvo6B4BPjbB8bu5JgMBG9E\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":5,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmNaYJFKwYQ6Haovj4ffFpZjBDcekNWYskeDgPUWEPvjyM\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":1,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmT4qWA4uRzjkM2mX43So42TUv8nCMcptYeZtMRVXn9spw\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":2,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmSHjDcayFrXe5BTY7VKCV6P61zetS2NxigLuAUChyZDrh\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":3,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmRddbZbDCYzWpXYCk9N6E6MYVaobNbWwheoZf7wjrMNUJ\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":4,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmdXy7JF12qaDw7UMJ2WKSnLLvo6B4BPjbB8bu5JgMBG9E\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":5,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmNaYJFKwYQ6Haovj4ffFpZjBDcekNWYskeDgPUWEPvjyM\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":1,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmT4qWA4uRzjkM2mX43So42TUv8nCMcptYeZtMRVXn9spw\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":2,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmSHjDcayFrXe5BTY7VKCV6P61zetS2NxigLuAUChyZDrh\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":3,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmRddbZbDCYzWpXYCk9N6E6MYVaobNbWwheoZf7wjrMNUJ\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":4,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmdXy7JF12qaDw7UMJ2WKSnLLvo6B4BPjbB8bu5JgMBG9E\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":5,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmNaYJFKwYQ6Haovj4ffFpZjBDcekNWYskeDgPUWEPvjyM\\"}]}}","id":"0"}\n' },
  request:
   Request {
     _events: [Object: null prototype] { abort: [Function] },
     _eventsCount: 1,
     _maxListeners: undefined,
     _enableHttp2: false,
     _agent: false,
     _formData: null,
     method: 'POST',
     url: 'http://localhost:8888',
     _header:
      { 'user-agent': 'node-superagent/5.0.6',
        'content-type': 'application/json',
        accept: 'json' },
     header:
      { 'User-Agent': 'node-superagent/5.0.6',
        'Content-Type': 'application/json',
        accept: 'json' },
     writable: true,
     _redirects: 0,
     _maxRedirects: 5,
     cookies: '',
     qs: {},
     _query: [],
     qsRaw: [],
     _redirectList: [],
     _streamRequest: false,
     _data:
      { jsonrpc: '2.0', id: '0', method: 'call', params: [Object] },
     req:
      ClientRequest {
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: 284,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [Socket],
        connection: [Socket],
        _header:
         'POST / HTTP/1.1\r\nHost: localhost:8888\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/5.0.6\r\nContent-Type: application/json\r\naccept: json\r\nContent-Length: 284\r\nConnection: close\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput],
        agent: [Agent],
        socketPath: undefined,
        timeout: undefined,
        method: 'POST',
        path: '/',
        _ended: true,
        res: [IncomingMessage],
        aborted: undefined,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     protocol: 'http:',
     host: 'localhost:8888',
     _endCalled: true,
     _callback: [Function],
     _fullfilledPromise: Promise { [Circular] },
     res:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 200,
        statusMessage: 'OK',
        client: [Socket],
        _consuming: false,
        _dumped: false,
        req: [ClientRequest],
        text:
         '{"jsonrpc":"2.0","result":"{\\"Ok\\":{\\"name\\":\\"GeoHashElement\\",\\"items\\":[{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":1,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmT4qWA4uRzjkM2mX43So42TUv8nCMcptYeZtMRVXn9spw\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":2,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmSHjDcayFrXe5BTY7VKCV6P61zetS2NxigLuAUChyZDrh\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":3,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmRddbZbDCYzWpXYCk9N6E6MYVaobNbWwheoZf7wjrMNUJ\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":4,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmdXy7JF12qaDw7UMJ2WKSnLLvo6B4BPjbB8bu5JgMBG9E\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":5,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmNaYJFKwYQ6Haovj4ffFpZjBDcekNWYskeDgPUWEPvjyM\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":1,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmT4qWA4uRzjkM2mX43So42TUv8nCMcptYeZtMRVXn9spw\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":2,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmSHjDcayFrXe5BTY7VKCV6P61zetS2NxigLuAUChyZDrh\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":3,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmRddbZbDCYzWpXYCk9N6E6MYVaobNbWwheoZf7wjrMNUJ\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":4,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmdXy7JF12qaDw7UMJ2WKSnLLvo6B4BPjbB8bu5JgMBG9E\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":5,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmNaYJFKwYQ6Haovj4ffFpZjBDcekNWYskeDgPUWEPvjyM\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":1,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmT4qWA4uRzjkM2mX43So42TUv8nCMcptYeZtMRVXn9spw\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":2,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmSHjDcayFrXe5BTY7VKCV6P61zetS2NxigLuAUChyZDrh\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":3,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmRddbZbDCYzWpXYCk9N6E6MYVaobNbWwheoZf7wjrMNUJ\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":4,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmdXy7JF12qaDw7UMJ2WKSnLLvo6B4BPjbB8bu5JgMBG9E\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":5,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmNaYJFKwYQ6Haovj4ffFpZjBDcekNWYskeDgPUWEPvjyM\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":1,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmT4qWA4uRzjkM2mX43So42TUv8nCMcptYeZtMRVXn9spw\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":2,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmSHjDcayFrXe5BTY7VKCV6P61zetS2NxigLuAUChyZDrh\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":3,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmRddbZbDCYzWpXYCk9N6E6MYVaobNbWwheoZf7wjrMNUJ\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":4,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmdXy7JF12qaDw7UMJ2WKSnLLvo6B4BPjbB8bu5JgMBG9E\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":5,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmNaYJFKwYQ6Haovj4ffFpZjBDcekNWYskeDgPUWEPvjyM\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":1,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmT4qWA4uRzjkM2mX43So42TUv8nCMcptYeZtMRVXn9spw\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":2,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmSHjDcayFrXe5BTY7VKCV6P61zetS2NxigLuAUChyZDrh\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":3,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmRddbZbDCYzWpXYCk9N6E6MYVaobNbWwheoZf7wjrMNUJ\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":4,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmdXy7JF12qaDw7UMJ2WKSnLLvo6B4BPjbB8bu5JgMBG9E\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":5,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmNaYJFKwYQ6Haovj4ffFpZjBDcekNWYskeDgPUWEPvjyM\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":1,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmT4qWA4uRzjkM2mX43So42TUv8nCMcptYeZtMRVXn9spw\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":2,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmSHjDcayFrXe5BTY7VKCV6P61zetS2NxigLuAUChyZDrh\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":3,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmRddbZbDCYzWpXYCk9N6E6MYVaobNbWwheoZf7wjrMNUJ\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":4,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmdXy7JF12qaDw7UMJ2WKSnLLvo6B4BPjbB8bu5JgMBG9E\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":5,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmNaYJFKwYQ6Haovj4ffFpZjBDcekNWYskeDgPUWEPvjyM\\"}]}}","id":"0"}\n' },
     _resBuffered: true,
     response: [Circular],
     called: true },
  req:
   ClientRequest {
     _events:
      [Object: null prototype] {
        drain: [Function],
        error: [Function],
        prefinish: [Function: requestOnPrefinish] },
     _eventsCount: 3,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: true,
     sendDate: false,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: 284,
     _hasBody: true,
     _trailer: '',
     finished: true,
     _headerSent: true,
     socket:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 257,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     connection:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 257,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     _header:
      'POST / HTTP/1.1\r\nHost: localhost:8888\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/5.0.6\r\nContent-Type: application/json\r\naccept: json\r\nContent-Length: 284\r\nConnection: close\r\n\r\n',
     _onPendingData: [Function: noopPendingOutput],
     agent:
      Agent {
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        defaultPort: 80,
        protocol: 'http:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256 },
     socketPath: undefined,
     timeout: undefined,
     method: 'POST',
     path: '/',
     _ended: true,
     res:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 200,
        statusMessage: 'OK',
        client: [Socket],
        _consuming: false,
        _dumped: false,
        req: [Circular],
        text:
         '{"jsonrpc":"2.0","result":"{\\"Ok\\":{\\"name\\":\\"GeoHashElement\\",\\"items\\":[{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":1,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmT4qWA4uRzjkM2mX43So42TUv8nCMcptYeZtMRVXn9spw\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":2,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmSHjDcayFrXe5BTY7VKCV6P61zetS2NxigLuAUChyZDrh\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":3,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmRddbZbDCYzWpXYCk9N6E6MYVaobNbWwheoZf7wjrMNUJ\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":4,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmdXy7JF12qaDw7UMJ2WKSnLLvo6B4BPjbB8bu5JgMBG9E\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":5,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmNaYJFKwYQ6Haovj4ffFpZjBDcekNWYskeDgPUWEPvjyM\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":1,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmT4qWA4uRzjkM2mX43So42TUv8nCMcptYeZtMRVXn9spw\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":2,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmSHjDcayFrXe5BTY7VKCV6P61zetS2NxigLuAUChyZDrh\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":3,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmRddbZbDCYzWpXYCk9N6E6MYVaobNbWwheoZf7wjrMNUJ\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":4,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmdXy7JF12qaDw7UMJ2WKSnLLvo6B4BPjbB8bu5JgMBG9E\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":5,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmNaYJFKwYQ6Haovj4ffFpZjBDcekNWYskeDgPUWEPvjyM\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":1,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmT4qWA4uRzjkM2mX43So42TUv8nCMcptYeZtMRVXn9spw\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":2,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmSHjDcayFrXe5BTY7VKCV6P61zetS2NxigLuAUChyZDrh\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":3,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmRddbZbDCYzWpXYCk9N6E6MYVaobNbWwheoZf7wjrMNUJ\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":4,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmdXy7JF12qaDw7UMJ2WKSnLLvo6B4BPjbB8bu5JgMBG9E\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":5,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmNaYJFKwYQ6Haovj4ffFpZjBDcekNWYskeDgPUWEPvjyM\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":1,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmT4qWA4uRzjkM2mX43So42TUv8nCMcptYeZtMRVXn9spw\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":2,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmSHjDcayFrXe5BTY7VKCV6P61zetS2NxigLuAUChyZDrh\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":3,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmRddbZbDCYzWpXYCk9N6E6MYVaobNbWwheoZf7wjrMNUJ\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":4,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmdXy7JF12qaDw7UMJ2WKSnLLvo6B4BPjbB8bu5JgMBG9E\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":5,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmNaYJFKwYQ6Haovj4ffFpZjBDcekNWYskeDgPUWEPvjyM\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":1,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmT4qWA4uRzjkM2mX43So42TUv8nCMcptYeZtMRVXn9spw\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":2,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmSHjDcayFrXe5BTY7VKCV6P61zetS2NxigLuAUChyZDrh\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":3,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmRddbZbDCYzWpXYCk9N6E6MYVaobNbWwheoZf7wjrMNUJ\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":4,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmdXy7JF12qaDw7UMJ2WKSnLLvo6B4BPjbB8bu5JgMBG9E\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":5,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmNaYJFKwYQ6Haovj4ffFpZjBDcekNWYskeDgPUWEPvjyM\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":1,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmT4qWA4uRzjkM2mX43So42TUv8nCMcptYeZtMRVXn9spw\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":2,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmSHjDcayFrXe5BTY7VKCV6P61zetS2NxigLuAUChyZDrh\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":3,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmRddbZbDCYzWpXYCk9N6E6MYVaobNbWwheoZf7wjrMNUJ\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":4,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmdXy7JF12qaDw7UMJ2WKSnLLvo6B4BPjbB8bu5JgMBG9E\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":5,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmNaYJFKwYQ6Haovj4ffFpZjBDcekNWYskeDgPUWEPvjyM\\"}]}}","id":"0"}\n' },
     aborted: undefined,
     timeoutCb: null,
     upgradeOrConnect: false,
     parser: null,
     maxHeadersCount: null,
     [Symbol(isCorked)]: false,
     [Symbol(outHeadersKey)]:
      [Object: null prototype] {
        host: [Array],
        'accept-encoding': [Array],
        'user-agent': [Array],
        'content-type': [Array],
        accept: [Array],
        'content-length': [Array] } },
  text:
   '{"jsonrpc":"2.0","result":"{\\"Ok\\":{\\"name\\":\\"GeoHashElement\\",\\"items\\":[{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":1,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmT4qWA4uRzjkM2mX43So42TUv8nCMcptYeZtMRVXn9spw\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":2,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmSHjDcayFrXe5BTY7VKCV6P61zetS2NxigLuAUChyZDrh\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":3,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmRddbZbDCYzWpXYCk9N6E6MYVaobNbWwheoZf7wjrMNUJ\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":4,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmdXy7JF12qaDw7UMJ2WKSnLLvo6B4BPjbB8bu5JgMBG9E\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":5,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmNaYJFKwYQ6Haovj4ffFpZjBDcekNWYskeDgPUWEPvjyM\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":1,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmT4qWA4uRzjkM2mX43So42TUv8nCMcptYeZtMRVXn9spw\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":2,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmSHjDcayFrXe5BTY7VKCV6P61zetS2NxigLuAUChyZDrh\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":3,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmRddbZbDCYzWpXYCk9N6E6MYVaobNbWwheoZf7wjrMNUJ\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":4,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmdXy7JF12qaDw7UMJ2WKSnLLvo6B4BPjbB8bu5JgMBG9E\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":5,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmNaYJFKwYQ6Haovj4ffFpZjBDcekNWYskeDgPUWEPvjyM\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":1,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmT4qWA4uRzjkM2mX43So42TUv8nCMcptYeZtMRVXn9spw\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":2,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmSHjDcayFrXe5BTY7VKCV6P61zetS2NxigLuAUChyZDrh\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":3,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmRddbZbDCYzWpXYCk9N6E6MYVaobNbWwheoZf7wjrMNUJ\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":4,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmdXy7JF12qaDw7UMJ2WKSnLLvo6B4BPjbB8bu5JgMBG9E\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":5,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmNaYJFKwYQ6Haovj4ffFpZjBDcekNWYskeDgPUWEPvjyM\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":1,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmT4qWA4uRzjkM2mX43So42TUv8nCMcptYeZtMRVXn9spw\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":2,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmSHjDcayFrXe5BTY7VKCV6P61zetS2NxigLuAUChyZDrh\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":3,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmRddbZbDCYzWpXYCk9N6E6MYVaobNbWwheoZf7wjrMNUJ\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":4,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmdXy7JF12qaDw7UMJ2WKSnLLvo6B4BPjbB8bu5JgMBG9E\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":5,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmNaYJFKwYQ6Haovj4ffFpZjBDcekNWYskeDgPUWEPvjyM\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":1,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmT4qWA4uRzjkM2mX43So42TUv8nCMcptYeZtMRVXn9spw\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":2,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmSHjDcayFrXe5BTY7VKCV6P61zetS2NxigLuAUChyZDrh\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":3,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmRddbZbDCYzWpXYCk9N6E6MYVaobNbWwheoZf7wjrMNUJ\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":4,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmdXy7JF12qaDw7UMJ2WKSnLLvo6B4BPjbB8bu5JgMBG9E\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":5,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmNaYJFKwYQ6Haovj4ffFpZjBDcekNWYskeDgPUWEPvjyM\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":1,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmT4qWA4uRzjkM2mX43So42TUv8nCMcptYeZtMRVXn9spw\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":2,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmSHjDcayFrXe5BTY7VKCV6P61zetS2NxigLuAUChyZDrh\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":3,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmRddbZbDCYzWpXYCk9N6E6MYVaobNbWwheoZf7wjrMNUJ\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":4,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmdXy7JF12qaDw7UMJ2WKSnLLvo6B4BPjbB8bu5JgMBG9E\\"},{\\"entityType\\":\\"GeoHashElement\\",\\"item\\":\\"{\\\\\\"geohash\\\\\\":\\\\\\"uEjxl\\\\\\",\\\\\\"precision\\\\\\":5,\\\\\\"entityType\\\\\\":\\\\\\"GeoHashElement\\\\\\"}\\",\\"addr\\":\\"QmNaYJFKwYQ6Haovj4ffFpZjBDcekNWYskeDgPUWEPvjyM\\"}]}}","id":"0"}\n',
  body:
   { jsonrpc: '2.0',
     result:
      '{"Ok":{"name":"GeoHashElement","items":[{"entityType":"GeoHashElement","item":"{\\"geohash\\":\\"uEjxl\\",\\"precision\\":1,\\"entityType\\":\\"GeoHashElement\\"}","addr":"QmT4qWA4uRzjkM2mX43So42TUv8nCMcptYeZtMRVXn9spw"},{"entityType":"GeoHashElement","item":"{\\"geohash\\":\\"uEjxl\\",\\"precision\\":2,\\"entityType\\":\\"GeoHashElement\\"}","addr":"QmSHjDcayFrXe5BTY7VKCV6P61zetS2NxigLuAUChyZDrh"},{"entityType":"GeoHashElement","item":"{\\"geohash\\":\\"uEjxl\\",\\"precision\\":3,\\"entityType\\":\\"GeoHashElement\\"}","addr":"QmRddbZbDCYzWpXYCk9N6E6MYVaobNbWwheoZf7wjrMNUJ"},{"entityType":"GeoHashElement","item":"{\\"geohash\\":\\"uEjxl\\",\\"precision\\":4,\\"entityType\\":\\"GeoHashElement\\"}","addr":"QmdXy7JF12qaDw7UMJ2WKSnLLvo6B4BPjbB8bu5JgMBG9E"},{"entityType":"GeoHashElement","item":"{\\"geohash\\":\\"uEjxl\\",\\"precision\\":5,\\"entityType\\":\\"GeoHashElement\\"}","addr":"QmNaYJFKwYQ6Haovj4ffFpZjBDcekNWYskeDgPUWEPvjyM"},{"entityType":"GeoHashElement","item":"{\\"geohash\\":\\"uEjxl\\",\\"precision\\":1,\\"entityType\\":\\"GeoHashElement\\"}","addr":"QmT4qWA4uRzjkM2mX43So42TUv8nCMcptYeZtMRVXn9spw"},{"entityType":"GeoHashElement","item":"{\\"geohash\\":\\"uEjxl\\",\\"precision\\":2,\\"entityType\\":\\"GeoHashElement\\"}","addr":"QmSHjDcayFrXe5BTY7VKCV6P61zetS2NxigLuAUChyZDrh"},{"entityType":"GeoHashElement","item":"{\\"geohash\\":\\"uEjxl\\",\\"precision\\":3,\\"entityType\\":\\"GeoHashElement\\"}","addr":"QmRddbZbDCYzWpXYCk9N6E6MYVaobNbWwheoZf7wjrMNUJ"},{"entityType":"GeoHashElement","item":"{\\"geohash\\":\\"uEjxl\\",\\"precision\\":4,\\"entityType\\":\\"GeoHashElement\\"}","addr":"QmdXy7JF12qaDw7UMJ2WKSnLLvo6B4BPjbB8bu5JgMBG9E"},{"entityType":"GeoHashElement","item":"{\\"geohash\\":\\"uEjxl\\",\\"precision\\":5,\\"entityType\\":\\"GeoHashElement\\"}","addr":"QmNaYJFKwYQ6Haovj4ffFpZjBDcekNWYskeDgPUWEPvjyM"},{"entityType":"GeoHashElement","item":"{\\"geohash\\":\\"uEjxl\\",\\"precision\\":1,\\"entityType\\":\\"GeoHashElement\\"}","addr":"QmT4qWA4uRzjkM2mX43So42TUv8nCMcptYeZtMRVXn9spw"},{"entityType":"GeoHashElement","item":"{\\"geohash\\":\\"uEjxl\\",\\"precision\\":2,\\"entityType\\":\\"GeoHashElement\\"}","addr":"QmSHjDcayFrXe5BTY7VKCV6P61zetS2NxigLuAUChyZDrh"},{"entityType":"GeoHashElement","item":"{\\"geohash\\":\\"uEjxl\\",\\"precision\\":3,\\"entityType\\":\\"GeoHashElement\\"}","addr":"QmRddbZbDCYzWpXYCk9N6E6MYVaobNbWwheoZf7wjrMNUJ"},{"entityType":"GeoHashElement","item":"{\\"geohash\\":\\"uEjxl\\",\\"precision\\":4,\\"entityType\\":\\"GeoHashElement\\"}","addr":"QmdXy7JF12qaDw7UMJ2WKSnLLvo6B4BPjbB8bu5JgMBG9E"},{"entityType":"GeoHashElement","item":"{\\"geohash\\":\\"uEjxl\\",\\"precision\\":5,\\"entityType\\":\\"GeoHashElement\\"}","addr":"QmNaYJFKwYQ6Haovj4ffFpZjBDcekNWYskeDgPUWEPvjyM"},{"entityType":"GeoHashElement","item":"{\\"geohash\\":\\"uEjxl\\",\\"precision\\":1,\\"entityType\\":\\"GeoHashElement\\"}","addr":"QmT4qWA4uRzjkM2mX43So42TUv8nCMcptYeZtMRVXn9spw"},{"entityType":"GeoHashElement","item":"{\\"geohash\\":\\"uEjxl\\",\\"precision\\":2,\\"entityType\\":\\"GeoHashElement\\"}","addr":"QmSHjDcayFrXe5BTY7VKCV6P61zetS2NxigLuAUChyZDrh"},{"entityType":"GeoHashElement","item":"{\\"geohash\\":\\"uEjxl\\",\\"precision\\":3,\\"entityType\\":\\"GeoHashElement\\"}","addr":"QmRddbZbDCYzWpXYCk9N6E6MYVaobNbWwheoZf7wjrMNUJ"},{"entityType":"GeoHashElement","item":"{\\"geohash\\":\\"uEjxl\\",\\"precision\\":4,\\"entityType\\":\\"GeoHashElement\\"}","addr":"QmdXy7JF12qaDw7UMJ2WKSnLLvo6B4BPjbB8bu5JgMBG9E"},{"entityType":"GeoHashElement","item":"{\\"geohash\\":\\"uEjxl\\",\\"precision\\":5,\\"entityType\\":\\"GeoHashElement\\"}","addr":"QmNaYJFKwYQ6Haovj4ffFpZjBDcekNWYskeDgPUWEPvjyM"},{"entityType":"GeoHashElement","item":"{\\"geohash\\":\\"uEjxl\\",\\"precision\\":1,\\"entityType\\":\\"GeoHashElement\\"}","addr":"QmT4qWA4uRzjkM2mX43So42TUv8nCMcptYeZtMRVXn9spw"},{"entityType":"GeoHashElement","item":"{\\"geohash\\":\\"uEjxl\\",\\"precision\\":2,\\"entityType\\":\\"GeoHashElement\\"}","addr":"QmSHjDcayFrXe5BTY7VKCV6P61zetS2NxigLuAUChyZDrh"},{"entityType":"GeoHashElement","item":"{\\"geohash\\":\\"uEjxl\\",\\"precision\\":3,\\"entityType\\":\\"GeoHashElement\\"}","addr":"QmRddbZbDCYzWpXYCk9N6E6MYVaobNbWwheoZf7wjrMNUJ"},{"entityType":"GeoHashElement","item":"{\\"geohash\\":\\"uEjxl\\",\\"precision\\":4,\\"entityType\\":\\"GeoHashElement\\"}","addr":"QmdXy7JF12qaDw7UMJ2WKSnLLvo6B4BPjbB8bu5JgMBG9E"},{"entityType":"GeoHashElement","item":"{\\"geohash\\":\\"uEjxl\\",\\"precision\\":5,\\"entityType\\":\\"GeoHashElement\\"}","addr":"QmNaYJFKwYQ6Haovj4ffFpZjBDcekNWYskeDgPUWEPvjyM"},{"entityType":"GeoHashElement","item":"{\\"geohash\\":\\"uEjxl\\",\\"precision\\":1,\\"entityType\\":\\"GeoHashElement\\"}","addr":"QmT4qWA4uRzjkM2mX43So42TUv8nCMcptYeZtMRVXn9spw"},{"entityType":"GeoHashElement","item":"{\\"geohash\\":\\"uEjxl\\",\\"precision\\":2,\\"entityType\\":\\"GeoHashElement\\"}","addr":"QmSHjDcayFrXe5BTY7VKCV6P61zetS2NxigLuAUChyZDrh"},{"entityType":"GeoHashElement","item":"{\\"geohash\\":\\"uEjxl\\",\\"precision\\":3,\\"entityType\\":\\"GeoHashElement\\"}","addr":"QmRddbZbDCYzWpXYCk9N6E6MYVaobNbWwheoZf7wjrMNUJ"},{"entityType":"GeoHashElement","item":"{\\"geohash\\":\\"uEjxl\\",\\"precision\\":4,\\"entityType\\":\\"GeoHashElement\\"}","addr":"QmdXy7JF12qaDw7UMJ2WKSnLLvo6B4BPjbB8bu5JgMBG9E"},{"entityType":"GeoHashElement","item":"{\\"geohash\\":\\"uEjxl\\",\\"precision\\":5,\\"entityType\\":\\"GeoHashElement\\"}","addr":"QmNaYJFKwYQ6Haovj4ffFpZjBDcekNWYskeDgPUWEPvjyM"}]}}',
     id: '0' },
  files: undefined,
  buffered: true,
  headers:
   { 'content-type': 'application/json; charset=utf-8',
     connection: 'close',
     'content-length': '6179',
     date: 'Tue, 25 Jun 2019 15:36:39 GMT' },
  header:
   { 'content-type': 'application/json; charset=utf-8',
     connection: 'close',
     'content-length': '6179',
     date: 'Tue, 25 Jun 2019 15:36:39 GMT' },
  statusCode: 200,
  status: 200,
  statusType: 2,
  info: false,
  ok: true,
  redirect: false,
  clientError: false,
  serverError: false,
  error: false,
  created: false,
  accepted: false,
  noContent: false,
  badRequest: false,
  unauthorized: false,
  notAcceptable: false,
  forbidden: false,
  notFound: false,
  unprocessableEntity: false,
  type: 'application/json',
  charset: 'utf-8',
  links: {},
  setEncoding: [Function: bound ],
  redirects: [],
  pipe: [Function] }
{ geohash: 'uEjxl', precision: 1, entityType: 'GeoHashElement' }
Response {
  _events: [Object: null prototype] {},
  _eventsCount: 0,
  _maxListeners: undefined,
  res:
   IncomingMessage {
     _readableState:
      ReadableState {
        objectMode: false,
        highWaterMark: 16384,
        buffer: BufferList { head: null, tail: null, length: 0 },
        length: 0,
        pipes: null,
        pipesCount: 0,
        flowing: true,
        ended: true,
        endEmitted: true,
        reading: false,
        sync: true,
        needReadable: false,
        emittedReadable: false,
        readableListening: false,
        resumeScheduled: false,
        paused: false,
        emitClose: true,
        autoDestroy: false,
        destroyed: false,
        defaultEncoding: 'utf8',
        awaitDrain: 0,
        readingMore: true,
        decoder: [StringDecoder],
        encoding: 'utf8' },
     readable: false,
     _events:
      [Object: null prototype] {
        end: [Array],
        data: [Array],
        error: [Array],
        close: [Function: bound emit] },
     _eventsCount: 4,
     _maxListeners: undefined,
     socket:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(asyncId)]: 277,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     connection:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(asyncId)]: 277,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     httpVersionMajor: 1,
     httpVersionMinor: 1,
     httpVersion: '1.1',
     complete: true,
     headers:
      { 'content-type': 'application/json; charset=utf-8',
        connection: 'close',
        'content-length': '84',
        date: 'Tue, 25 Jun 2019 15:36:39 GMT' },
     rawHeaders:
      [ 'content-type',
        'application/json; charset=utf-8',
        'connection',
        'close',
        'content-length',
        '84',
        'date',
        'Tue, 25 Jun 2019 15:36:39 GMT' ],
     trailers: {},
     rawTrailers: [],
     aborted: false,
     upgrade: false,
     url: '',
     method: null,
     statusCode: 200,
     statusMessage: 'OK',
     client:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [ClientRequest],
        [Symbol(asyncId)]: 277,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     _consuming: false,
     _dumped: false,
     req:
      ClientRequest {
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: 240,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [Socket],
        connection: [Socket],
        _header:
         'POST / HTTP/1.1\r\nHost: localhost:8888\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/5.0.6\r\nContent-Type: application/json\r\naccept: json\r\nContent-Length: 240\r\nConnection: close\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput],
        agent: [Agent],
        socketPath: undefined,
        timeout: undefined,
        method: 'POST',
        path: '/',
        _ended: true,
        res: [Circular],
        aborted: undefined,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     text:
      '{"jsonrpc":"2.0","result":"{\\"Ok\\":{\\"name\\":\\"services\\",\\"items\\":[]}}","id":"0"}\n' },
  request:
   Request {
     _events: [Object: null prototype] { abort: [Function] },
     _eventsCount: 1,
     _maxListeners: undefined,
     _enableHttp2: false,
     _agent: false,
     _formData: null,
     method: 'POST',
     url: 'http://localhost:8888',
     _header:
      { 'user-agent': 'node-superagent/5.0.6',
        'content-type': 'application/json',
        accept: 'json' },
     header:
      { 'User-Agent': 'node-superagent/5.0.6',
        'Content-Type': 'application/json',
        accept: 'json' },
     writable: true,
     _redirects: 0,
     _maxRedirects: 5,
     cookies: '',
     qs: {},
     _query: [],
     qsRaw: [],
     _redirectList: [],
     _streamRequest: false,
     _data:
      { jsonrpc: '2.0', id: '0', method: 'call', params: [Object] },
     req:
      ClientRequest {
        _events: [Object],
        _eventsCount: 3,
        _maxListeners: undefined,
        output: [],
        outputEncodings: [],
        outputCallbacks: [],
        outputSize: 0,
        writable: true,
        _last: true,
        chunkedEncoding: false,
        shouldKeepAlive: false,
        useChunkedEncodingByDefault: true,
        sendDate: false,
        _removedConnection: false,
        _removedContLen: false,
        _removedTE: false,
        _contentLength: 240,
        _hasBody: true,
        _trailer: '',
        finished: true,
        _headerSent: true,
        socket: [Socket],
        connection: [Socket],
        _header:
         'POST / HTTP/1.1\r\nHost: localhost:8888\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/5.0.6\r\nContent-Type: application/json\r\naccept: json\r\nContent-Length: 240\r\nConnection: close\r\n\r\n',
        _onPendingData: [Function: noopPendingOutput],
        agent: [Agent],
        socketPath: undefined,
        timeout: undefined,
        method: 'POST',
        path: '/',
        _ended: true,
        res: [IncomingMessage],
        aborted: undefined,
        timeoutCb: null,
        upgradeOrConnect: false,
        parser: null,
        maxHeadersCount: null,
        [Symbol(isCorked)]: false,
        [Symbol(outHeadersKey)]: [Object] },
     protocol: 'http:',
     host: 'localhost:8888',
     _endCalled: true,
     _callback: [Function],
     _fullfilledPromise: Promise { [Circular] },
     res:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 200,
        statusMessage: 'OK',
        client: [Socket],
        _consuming: false,
        _dumped: false,
        req: [ClientRequest],
        text:
         '{"jsonrpc":"2.0","result":"{\\"Ok\\":{\\"name\\":\\"services\\",\\"items\\":[]}}","id":"0"}\n' },
     _resBuffered: true,
     response: [Circular],
     called: true },
  req:
   ClientRequest {
     _events:
      [Object: null prototype] {
        drain: [Function],
        error: [Function],
        prefinish: [Function: requestOnPrefinish] },
     _eventsCount: 3,
     _maxListeners: undefined,
     output: [],
     outputEncodings: [],
     outputCallbacks: [],
     outputSize: 0,
     writable: true,
     _last: true,
     chunkedEncoding: false,
     shouldKeepAlive: false,
     useChunkedEncodingByDefault: true,
     sendDate: false,
     _removedConnection: false,
     _removedContLen: false,
     _removedTE: false,
     _contentLength: 240,
     _hasBody: true,
     _trailer: '',
     finished: true,
     _headerSent: true,
     socket:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 277,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     connection:
      Socket {
        connecting: false,
        _hadError: false,
        _handle: [TCP],
        _parent: null,
        _host: 'localhost',
        _readableState: [ReadableState],
        readable: true,
        _events: [Object],
        _eventsCount: 7,
        _maxListeners: undefined,
        _writableState: [WritableState],
        writable: false,
        allowHalfOpen: false,
        _sockname: null,
        _pendingData: null,
        _pendingEncoding: '',
        server: null,
        _server: null,
        parser: null,
        _httpMessage: [Circular],
        [Symbol(asyncId)]: 277,
        [Symbol(lastWriteQueueSize)]: 0,
        [Symbol(timeout)]: null,
        [Symbol(kBytesRead)]: 0,
        [Symbol(kBytesWritten)]: 0 },
     _header:
      'POST / HTTP/1.1\r\nHost: localhost:8888\r\nAccept-Encoding: gzip, deflate\r\nUser-Agent: node-superagent/5.0.6\r\nContent-Type: application/json\r\naccept: json\r\nContent-Length: 240\r\nConnection: close\r\n\r\n',
     _onPendingData: [Function: noopPendingOutput],
     agent:
      Agent {
        _events: [Object],
        _eventsCount: 1,
        _maxListeners: undefined,
        defaultPort: 80,
        protocol: 'http:',
        options: [Object],
        requests: {},
        sockets: [Object],
        freeSockets: {},
        keepAliveMsecs: 1000,
        keepAlive: false,
        maxSockets: Infinity,
        maxFreeSockets: 256 },
     socketPath: undefined,
     timeout: undefined,
     method: 'POST',
     path: '/',
     _ended: true,
     res:
      IncomingMessage {
        _readableState: [ReadableState],
        readable: false,
        _events: [Object],
        _eventsCount: 4,
        _maxListeners: undefined,
        socket: [Socket],
        connection: [Socket],
        httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers: [Object],
        rawHeaders: [Array],
        trailers: {},
        rawTrailers: [],
        aborted: false,
        upgrade: false,
        url: '',
        method: null,
        statusCode: 200,
        statusMessage: 'OK',
        client: [Socket],
        _consuming: false,
        _dumped: false,
        req: [Circular],
        text:
         '{"jsonrpc":"2.0","result":"{\\"Ok\\":{\\"name\\":\\"services\\",\\"items\\":[]}}","id":"0"}\n' },
     aborted: undefined,
     timeoutCb: null,
     upgradeOrConnect: false,
     parser: null,
     maxHeadersCount: null,
     [Symbol(isCorked)]: false,
     [Symbol(outHeadersKey)]:
      [Object: null prototype] {
        host: [Array],
        'accept-encoding': [Array],
        'user-agent': [Array],
        'content-type': [Array],
        accept: [Array],
        'content-length': [Array] } },
  text:
   '{"jsonrpc":"2.0","result":"{\\"Ok\\":{\\"name\\":\\"services\\",\\"items\\":[]}}","id":"0"}\n',
  body:
   { jsonrpc: '2.0',
     result: '{"Ok":{"name":"services","items":[]}}',
     id: '0' },
  files: undefined,
  buffered: true,
  headers:
   { 'content-type': 'application/json; charset=utf-8',
     connection: 'close',
     'content-length': '84',
     date: 'Tue, 25 Jun 2019 15:36:39 GMT' },
  header:
   { 'content-type': 'application/json; charset=utf-8',
     connection: 'close',
     'content-length': '84',
     date: 'Tue, 25 Jun 2019 15:36:39 GMT' },
  statusCode: 200,
  status: 200,
  statusType: 2,
  info: false,
  ok: true,
  redirect: false,
  clientError: false,
  serverError: false,
  error: false,
  created: false,
  accepted: false,
  noContent: false,
  badRequest: false,
  unauthorized: false,
  notAcceptable: false,
  forbidden: false,
  notFound: false,
  unprocessableEntity: false,
  type: 'application/json',
  charset: 'utf-8',
  links: {},
  setEncoding: [Function: bound ],
  redirects: [],
  pipe: [Function] }
{ name: 'services', items: [] }
